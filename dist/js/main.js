webpackJsonp([2],[,function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(Redux) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* global Redux */\n\nvar initialState = {\n    theme: 'pop',\n    dataset: 'acs1115',\n    geoscheme: 'State-County-Tract-BlockGroup'\n};\n\nfunction app(state, action) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (action.type) {\n        case 'CHANGE THEME':\n            return Object.assign({}, state, {\n                theme: action.value\n            });\n        case 'CHANGE DATASET':\n            return Object.assign({}, state, {\n                dataset: action.value\n            });\n        case 'CHANGE GEOSCHEME':\n            return Object.assign({}, state, {\n                geoscheme: action.value\n            });\n        default:\n            return state;\n    }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nvar Store = Redux.createStore(app);\n\n// You can use subscribe() to update the UI in response to state changes.\n// Normally you'd use a view binding library (e.g. React Redux) rather than subscribe() directly.\n// However it can also be handy to persist the current state in the localStorage.\n\nStore.subscribe(function () {\n    console.log(Store.getState());\n});\n\nfunction observeStore(property, onChange) {\n    var currentState = Store.getState()[property];\n\n    function handleChange() {\n        var nextState = Store.getState()[property];\n        if (nextState !== currentState) {\n            currentState = nextState;\n            onChange(currentState);\n        }\n    }\n\n    var unsubscribe = Store.subscribe(handleChange);\n\n    return unsubscribe;\n}\n\nexports.Store = Store;\nexports.observeStore = observeStore;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGUvcmVkdXhTZXR1cC5qcz80NTY5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuLyogZ2xvYmFsIFJlZHV4ICovXG5cbnZhciBpbml0aWFsU3RhdGUgPSB7XG4gICAgdGhlbWU6ICdwb3AnLFxuICAgIGRhdGFzZXQ6ICdhY3MxMTE1JyxcbiAgICBnZW9zY2hlbWU6ICdTdGF0ZS1Db3VudHktVHJhY3QtQmxvY2tHcm91cCdcbn07XG5cbmZ1bmN0aW9uIGFwcChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGluaXRpYWxTdGF0ZTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgJ0NIQU5HRSBUSEVNRSc6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICB0aGVtZTogYWN0aW9uLnZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSAnQ0hBTkdFIERBVEFTRVQnOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgZGF0YXNldDogYWN0aW9uLnZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSAnQ0hBTkdFIEdFT1NDSEVNRSc6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBnZW9zY2hlbWU6IGFjdGlvbi52YWx1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuXG4vLyBDcmVhdGUgYSBSZWR1eCBzdG9yZSBob2xkaW5nIHRoZSBzdGF0ZSBvZiB5b3VyIGFwcC5cbi8vIEl0cyBBUEkgaXMgeyBzdWJzY3JpYmUsIGRpc3BhdGNoLCBnZXRTdGF0ZSB9LlxudmFyIFN0b3JlID0gUmVkdXguY3JlYXRlU3RvcmUoYXBwKTtcblxuLy8gWW91IGNhbiB1c2Ugc3Vic2NyaWJlKCkgdG8gdXBkYXRlIHRoZSBVSSBpbiByZXNwb25zZSB0byBzdGF0ZSBjaGFuZ2VzLlxuLy8gTm9ybWFsbHkgeW91J2QgdXNlIGEgdmlldyBiaW5kaW5nIGxpYnJhcnkgKGUuZy4gUmVhY3QgUmVkdXgpIHJhdGhlciB0aGFuIHN1YnNjcmliZSgpIGRpcmVjdGx5LlxuLy8gSG93ZXZlciBpdCBjYW4gYWxzbyBiZSBoYW5keSB0byBwZXJzaXN0IHRoZSBjdXJyZW50IHN0YXRlIGluIHRoZSBsb2NhbFN0b3JhZ2UuXG5cblN0b3JlLnN1YnNjcmliZShmdW5jdGlvbiAoKSB7XG4gICAgY29uc29sZS5sb2coU3RvcmUuZ2V0U3RhdGUoKSk7XG59KTtcblxuZnVuY3Rpb24gb2JzZXJ2ZVN0b3JlKHByb3BlcnR5LCBvbkNoYW5nZSkge1xuICAgIHZhciBjdXJyZW50U3RhdGUgPSBTdG9yZS5nZXRTdGF0ZSgpW3Byb3BlcnR5XTtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZSgpIHtcbiAgICAgICAgdmFyIG5leHRTdGF0ZSA9IFN0b3JlLmdldFN0YXRlKClbcHJvcGVydHldO1xuICAgICAgICBpZiAobmV4dFN0YXRlICE9PSBjdXJyZW50U3RhdGUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRTdGF0ZSA9IG5leHRTdGF0ZTtcbiAgICAgICAgICAgIG9uQ2hhbmdlKGN1cnJlbnRTdGF0ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgdW5zdWJzY3JpYmUgPSBTdG9yZS5zdWJzY3JpYmUoaGFuZGxlQ2hhbmdlKTtcblxuICAgIHJldHVybiB1bnN1YnNjcmliZTtcbn1cblxuZXhwb3J0cy5TdG9yZSA9IFN0b3JlO1xuZXhwb3J0cy5vYnNlcnZlU3RvcmUgPSBvYnNlcnZlU3RvcmU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL3JlZHV4U2V0dXAuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==")},,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.default = {\n\n    "acs1115": {\n        "State-County-Tract-BlockGroup": {\n            "state": [3, 5],\n            "county": [5, 9],\n            "tract": [9, 12],\n            "bg": [12, 14]\n        },\n        "State-Place": {\n            "state": [3, 9],\n            "place": [9, 14]\n        },\n        "State-County": {\n            "state": [3, 9],\n            "county": [9, 14]\n        },\n        "County-Tract": {\n            "county": [3, 9],\n            "tract": [9, 14]\n        }\n    },\n    "c2010": {\n        "State-County-Tract-BlockGroup": {\n            "state": [3, 5],\n            "county": [5, 9],\n            "tract": [9, 12],\n            "bg": [12, 14]\n        },\n        "State-Place": {\n            "state": [3, 9],\n            "place": [9, 14]\n        },\n        "State-County": {\n            "state": [3, 9],\n            "county": [9, 14]\n        },\n        "County-Tract": {\n            "county": [3, 9],\n            "tract": [9, 14]\n        }\n    },\n    "c2000": {\n        "State-County-Tract-BlockGroup": {\n            "state": [3, 5],\n            "county": [5, 9],\n            "tract": [9, 12],\n            "bg": [12, 14]\n        },\n        "State-Place": {\n            "state": [3, 9],\n            "place": [9, 14]\n        },\n        "State-County": {\n            "state": [3, 9],\n            "county": [9, 14]\n        },\n        "County-Tract": {\n            "county": [3, 9],\n            "tract": [9, 14]\n        }\n    },\n    "c1990": {\n        "State-County-Tract-BlockGroup": {\n            "state": [3, 5],\n            "county": [5, 9],\n            "tract": [9, 12],\n            "bg": [12, 14]\n        },\n        "State-Place": {\n            "state": [3, 9],\n            "place": [9, 14]\n        },\n        "State-County": {\n            "state": [3, 9],\n            "county": [9, 14]\n        },\n        "County-Tract": {\n            "county": [3, 9],\n            "tract": [9, 14]\n        }\n    },\n    "c1980": {\n        "State-County-Tract": {\n            "state": [3, 5],\n            "county": [5, 9],\n            "tract": [9, 14]\n        },\n        "State-Place": {\n            "state": [3, 9],\n            "place": [9, 14]\n        },\n        "State-County": {\n            "state": [3, 9],\n            "county": [9, 14]\n        },\n        "County-Tract": {\n            "county": [3, 9],\n            "tract": [9, 14]\n        }\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qc29uL2dlb3NjaGVtZS5qcz9mOTI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG5cbiAgICBcImFjczExMTVcIjoge1xuICAgICAgICBcIlN0YXRlLUNvdW50eS1UcmFjdC1CbG9ja0dyb3VwXCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDVdLFxuICAgICAgICAgICAgXCJjb3VudHlcIjogWzUsIDldLFxuICAgICAgICAgICAgXCJ0cmFjdFwiOiBbOSwgMTJdLFxuICAgICAgICAgICAgXCJiZ1wiOiBbMTIsIDE0XVxuICAgICAgICB9LFxuICAgICAgICBcIlN0YXRlLVBsYWNlXCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDldLFxuICAgICAgICAgICAgXCJwbGFjZVwiOiBbOSwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiU3RhdGUtQ291bnR5XCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDldLFxuICAgICAgICAgICAgXCJjb3VudHlcIjogWzksIDE0XVxuICAgICAgICB9LFxuICAgICAgICBcIkNvdW50eS1UcmFjdFwiOiB7XG4gICAgICAgICAgICBcImNvdW50eVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcInRyYWN0XCI6IFs5LCAxNF1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJjMjAxMFwiOiB7XG4gICAgICAgIFwiU3RhdGUtQ291bnR5LVRyYWN0LUJsb2NrR3JvdXBcIjoge1xuICAgICAgICAgICAgXCJzdGF0ZVwiOiBbMywgNV0sXG4gICAgICAgICAgICBcImNvdW50eVwiOiBbNSwgOV0sXG4gICAgICAgICAgICBcInRyYWN0XCI6IFs5LCAxMl0sXG4gICAgICAgICAgICBcImJnXCI6IFsxMiwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiU3RhdGUtUGxhY2VcIjoge1xuICAgICAgICAgICAgXCJzdGF0ZVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcInBsYWNlXCI6IFs5LCAxNF1cbiAgICAgICAgfSxcbiAgICAgICAgXCJTdGF0ZS1Db3VudHlcIjoge1xuICAgICAgICAgICAgXCJzdGF0ZVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcImNvdW50eVwiOiBbOSwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ291bnR5LVRyYWN0XCI6IHtcbiAgICAgICAgICAgIFwiY291bnR5XCI6IFszLCA5XSxcbiAgICAgICAgICAgIFwidHJhY3RcIjogWzksIDE0XVxuICAgICAgICB9XG4gICAgfSxcbiAgICBcImMyMDAwXCI6IHtcbiAgICAgICAgXCJTdGF0ZS1Db3VudHktVHJhY3QtQmxvY2tHcm91cFwiOiB7XG4gICAgICAgICAgICBcInN0YXRlXCI6IFszLCA1XSxcbiAgICAgICAgICAgIFwiY291bnR5XCI6IFs1LCA5XSxcbiAgICAgICAgICAgIFwidHJhY3RcIjogWzksIDEyXSxcbiAgICAgICAgICAgIFwiYmdcIjogWzEyLCAxNF1cbiAgICAgICAgfSxcbiAgICAgICAgXCJTdGF0ZS1QbGFjZVwiOiB7XG4gICAgICAgICAgICBcInN0YXRlXCI6IFszLCA5XSxcbiAgICAgICAgICAgIFwicGxhY2VcIjogWzksIDE0XVxuICAgICAgICB9LFxuICAgICAgICBcIlN0YXRlLUNvdW50eVwiOiB7XG4gICAgICAgICAgICBcInN0YXRlXCI6IFszLCA5XSxcbiAgICAgICAgICAgIFwiY291bnR5XCI6IFs5LCAxNF1cbiAgICAgICAgfSxcbiAgICAgICAgXCJDb3VudHktVHJhY3RcIjoge1xuICAgICAgICAgICAgXCJjb3VudHlcIjogWzMsIDldLFxuICAgICAgICAgICAgXCJ0cmFjdFwiOiBbOSwgMTRdXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFwiYzE5OTBcIjoge1xuICAgICAgICBcIlN0YXRlLUNvdW50eS1UcmFjdC1CbG9ja0dyb3VwXCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDVdLFxuICAgICAgICAgICAgXCJjb3VudHlcIjogWzUsIDldLFxuICAgICAgICAgICAgXCJ0cmFjdFwiOiBbOSwgMTJdLFxuICAgICAgICAgICAgXCJiZ1wiOiBbMTIsIDE0XVxuICAgICAgICB9LFxuICAgICAgICBcIlN0YXRlLVBsYWNlXCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDldLFxuICAgICAgICAgICAgXCJwbGFjZVwiOiBbOSwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiU3RhdGUtQ291bnR5XCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDldLFxuICAgICAgICAgICAgXCJjb3VudHlcIjogWzksIDE0XVxuICAgICAgICB9LFxuICAgICAgICBcIkNvdW50eS1UcmFjdFwiOiB7XG4gICAgICAgICAgICBcImNvdW50eVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcInRyYWN0XCI6IFs5LCAxNF1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgXCJjMTk4MFwiOiB7XG4gICAgICAgIFwiU3RhdGUtQ291bnR5LVRyYWN0XCI6IHtcbiAgICAgICAgICAgIFwic3RhdGVcIjogWzMsIDVdLFxuICAgICAgICAgICAgXCJjb3VudHlcIjogWzUsIDldLFxuICAgICAgICAgICAgXCJ0cmFjdFwiOiBbOSwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiU3RhdGUtUGxhY2VcIjoge1xuICAgICAgICAgICAgXCJzdGF0ZVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcInBsYWNlXCI6IFs5LCAxNF1cbiAgICAgICAgfSxcbiAgICAgICAgXCJTdGF0ZS1Db3VudHlcIjoge1xuICAgICAgICAgICAgXCJzdGF0ZVwiOiBbMywgOV0sXG4gICAgICAgICAgICBcImNvdW50eVwiOiBbOSwgMTRdXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ291bnR5LVRyYWN0XCI6IHtcbiAgICAgICAgICAgIFwiY291bnR5XCI6IFszLCA5XSxcbiAgICAgICAgICAgIFwidHJhY3RcIjogWzksIDE0XVxuICAgICAgICB9XG4gICAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qc29uL2dlb3NjaGVtZS5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=')},,,,,,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.default = {\n\n    "acs1115": {\n        "mhi": {\n            "title": "Median Household Income",\n            "table": "b19013",\n            "section": "Income",\n            "expression": ["b19013001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Household Income",\n            "favstyle": ["ckmeans", "7", "mh1"],\n            "bg": "yes"\n        },\n\n        "mhv": {\n            "title": "Median Home Value",\n            "section": "Housing",\n            "table": "b25077",\n            "expression": ["b25077001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Home Value",\n            "favstyle": ["ckmeans", "7", "mh2"],\n            "bg": "yes"\n        },\n\n        "mfi": {\n            "title": "Median Family Income",\n            "section": "Income",\n            "table": "b19113",\n            "expression": ["b19113001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Family Income",\n            "favstyle": ["ckmeans", "7", "mh3"],\n            "bg": "yes"\n        },\n\n        "pci": {\n            "title": "Per Capita Income",\n            "section": "Income",\n            "table": "b19301",\n            "expression": ["b19301001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Per Capita Income",\n            "favstyle": ["ckmeans", "7", "mh4"],\n            "bg": "yes"\n        },\n\n        "myb": {\n            "title": "Median Year Housing Unit Built",\n            "section": "Housing",\n            "table": "b25035",\n            "expression": ["b25035001"],\n            "type": "regular",\n            "minval": "1939",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Year Built",\n            "favstyle": ["ckmeans", "7", "mh5"],\n            "bg": "yes"\n        },\n\n        "pop": {\n            "title": "Total Population",\n            "section": "Population",\n            "table": "b01001",\n            "expression": ["b01001001"],\n            "type": "number",\n            "minval": "0",\n            "mininc": "1",\n            "usezeroasnull": "no",\n            "favtable": "Basic Population (total)",\n            "favstyle": ["ckmeans", "7", "mh7"],\n            "bg": "yes"\n        }\n        /*,\n                "pcth": {\n                    "title": "Percent Hispanic",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002012", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": ".01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "mh6"],\n                    "bg": "yes"\n                },\n                 "pctw": {\n                    "title": "Percent White",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002003", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "mh8"],\n                    "bg": "yes"\n                },\n                 "pctb": {\n                    "title": "Percent Black",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002004", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "mh9"],\n                    "bg": "yes"\n                },\n                 "pctna": {\n                    "title": "Percent Native American",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002005", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "sh1"],\n                    "bg": "yes"\n                },\n                 "pctasian": {\n                    "title": "Percent Asian",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002006", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "sh2"],\n                    "bg": "yes"\n                },\n                 "pcthaw": {\n                    "title": "Percent Hawaiian & PacIs",\n                    "section": "Race",\n                    "table": "b03002",\n                    "expression": ["b03002007", "/", "b03002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Race-Ethnicity (percent)",\n                    "favstyle": ["ckmeans", "7", "sh4"],\n                    "bg": "yes"\n                },\n                 "pctmale": {\n                    "title": "Percent Male",\n                    "section": "Population",\n                    "table": "b01001",\n                    "expression": ["b01001002", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Male & Female (percent)",\n                    "favstyle": ["ckmeans", "7", "sh6"],\n                    "bg": "yes"\n                },\n                 "pctfemale": {\n                    "title": "Percent Female",\n                    "section": "Population",\n                    "table": "b01001",\n                    "expression": ["b01001026", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Male & Female (percent)",\n                    "favstyle": ["ckmeans", "7", "sh5"],\n                    "bg": "yes"\n                },\n                 "ageless10": {\n                    "title": "Percent Age Less Than 10",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001003", "+", "b01001004", "+", "b01001027", "+", "b01001028", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh1"],\n                    "bg": "yes"\n                },\n                 "ageless18": {\n                    "title": "Percent Age Less Than 18",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001003", "+", "b01001004", "+", "b01001027", "+", "b01001028", "+", "b01001005", "+", "b01001006", "+", "b01001029", "+", "b01001030", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh2"],\n                    "bg": "yes"\n                },\n                 "age18to24": {\n                    "title": "Percent Age 18 to 24",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001007", "+", "b01001008", "+", "b01001009", "+", "b01001010", "+", "b01001031", "+", "b01001032", "+", "b01001033", "+", "b01001034", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh3"],\n                    "bg": "yes"\n                },\n                 "age25to34": {\n                    "title": "Percent Age 25 to 34",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001011", "+", "b01001012", "+", "b01001035", "+", "b01001036", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh4"],\n                    "bg": "yes"\n                },\n                 "age35to44": {\n                    "title": "Percent Age 35 to 44",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001013", "+", "b01001014", "+", "b01001037", "+", "b01001038", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh5"],\n                    "bg": "yes"\n                },\n                 "age45to64": {\n                    "title": "Percent Age 45 to 64",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001015", "+", "b01001016", "+", "b01001017", "+", "b01001018", "+", "b01001019", "+", "b01001039", "+", "b01001040", "+", "b01001041", "+", "b01001042", "+", "b01001043", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh6"],\n                    "bg": "yes"\n                },\n                 "age65plus": {\n                    "title": "Percent Age 65 Plus",\n                    "section": "Age",\n                    "table": "b01001",\n                    "expression": ["(", "b01001020", "+", "b01001021", "+", "b01001022", "+", "b01001023", "+", "b01001024", "+", "b01001025", "+", "b01001044", "+", "b01001045", "+", "b01001046", "+", "b01001047", "+", "b01001048", "+", "b01001049", ")", "/", "b01001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Age Group (percent)",\n                    "favstyle": ["ckmeans", "7", "mh7"],\n                    "bg": "yes"\n                },\n                 "medianage": {\n                    "title": "Median Age",\n                    "section": "Age",\n                    "table": "b01002",\n                    "expression": ["b01002001"],\n                    "type": "number",\n                    "minval": "1",\n                    "mininc": "0.1",\n                    "usezeroasnull": "yes",\n                    "favtable": "Median Age",\n                    "favstyle": ["ckmeans", "7", "mh8"],\n                    "bg": "yes"\n                },\n                 "households": {\n                    "title": "Total Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001001"],\n                    "type": "number",\n                    "minval": "0",\n                    "mininc": "1",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh9"],\n                    "bg": "yes"\n                },\n                 "familyhh": {\n                    "title": "Percent Family Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001002", "/", "b11001001"],\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "yes"\n                },\n                 "nonfamhh": {\n                    "title": "Percent Non Family Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001007", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh11"],\n                    "bg": "yes"\n                },\n                 "housingun": {\n                    "title": "Total Housing Units",\n                    "section": "Housing",\n                    "table": "b25002",\n                    "expression": ["b25002001"],\n                    "type": "number",\n                    "minval": "0",\n                    "mininc": "1",\n                    "usezeroasnull": "no",\n                    "favtable": "Housing Units (total)",\n                    "favstyle": ["ckmeans", "7", "mh12"],\n                    "bg": "yes"\n                },\n                 "occhu": {\n                    "title": "Percent Occupied Housing Units",\n                    "section": "Housing",\n                    "table": "b25002",\n                    "expression": ["b25002002", "/", "b25002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Occupancy (percent)",\n                    "favstyle": ["ckmeans", "7", "sh1"],\n                    "bg": "yes"\n                },\n                 "vachu": {\n                    "title": "Percent Vacant Housing Units",\n                    "section": "Housing",\n                    "table": "b25002",\n                    "expression": ["b25002003", "/", "b25002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Occupancy (percent)",\n                    "favstyle": ["ckmeans", "7", "sh2"],\n                    "bg": "yes"\n                },\n                 "owned": {\n                    "title": "Percent Owner Occupied Housing Units",\n                    "section": "Housing",\n                    "table": "b25003",\n                    "expression": ["b25003002", "/", "b25003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Tenure (percent)",\n                    "favstyle": ["ckmeans", "7", "sh4"],\n                    "bg": "yes"\n                },\n                 "rented": {\n                    "title": "Percent Renter Occupied Housing Units",\n                    "section": "Housing",\n                    "table": "b25003",\n                    "expression": ["b25003003", "/", "b25003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Tenure (percent)",\n                    "favstyle": ["ckmeans", "7", "sh5"],\n                    "bg": "yes"\n                },\n                 "nohsdipl": {\n                    "title": "Percent No High School Diploma",\n                    "section": "Education",\n                    "table": "b15003",\n                    "expression": ["(", "b15003002", "+", "b15003003", "+", "b15003004", "+", "b15003005", "+", "b15003006", "+", "b15003007", "+", "b15003008", "+", "b15003009", "+", "b15003010", "+", "b15003011", "+", "b15003012", "+", "b15003013", "+", "b15003014", "+", "b15003015", "+", "b15003016", ")", "/", "b15003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Educational Attainment (percent)",\n                    "favstyle": ["ckmeans", "7", "sh6"],\n                    "bg": "yes"\n                },\n                 "hsgradsc": {\n                    "title": "Percent High School Degree or Some College",\n                    "section": "Education",\n                    "table": "b15003",\n                    "expression": ["(", "b15003017", "+", "b15003018", "+", "b15003019", "+", "b15003020", "+", "b15003021", ")", "/", "b15003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Educational Attainment (percent)",\n                    "favstyle": ["ckmeans", "7", "mh1"],\n                    "bg": "yes"\n                },\n                 "bachlhghr": {\n                    "title": "Percent Bachelors Degree or Higher",\n                    "section": "Education",\n                    "table": "b15003",\n                    "expression": ["(", "b15003022", "+", "b15003023", "+", "b15003024", "+", "b15003025", ")", "/", "b15003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Educational Attainment (percent)",\n                    "favstyle": ["ckmeans", "7", "mh2"],\n                    "bg": "yes"\n                },\n                 "medcrent": {\n                    "title": "Median Contract Rent",\n                    "section": "Rent",\n                    "table": "b25058",\n                    "expression": ["b25058001"],\n                    "type": "currency",\n                    "minval": "1",\n                    "mininc": "1",\n                    "usezeroasnull": "yes",\n                    "favtable": "Median Contract Rent",\n                    "favstyle": ["ckmeans", "7", "mh3"],\n                    "bg": "yes"\n                },\n                 "medgrent": {\n                    "title": "Median Gross Rent",\n                    "section": "Rent",\n                    "table": "b25064",\n                    "expression": ["b25064001"],\n                    "type": "currency",\n                    "minval": "1",\n                    "mininc": "1",\n                    "usezeroasnull": "yes",\n                    "favtable": "Median Gross Rent",\n                    "favstyle": ["ckmeans", "7", "mh4"],\n                    "bg": "yes"\n                },\n                 "citzbirth": {\n                    "title": "Percent US Citizen by Birth",\n                    "section": "Citizenship",\n                    "table": "b05001",\n                    "expression": ["(", "b05001002", "+", "b05001003", "+", "b05001004", ")", "/", "b05001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Citizenship (percent)",\n                    "favstyle": ["ckmeans", "7", "mh5"],\n                    "bg": "no"\n                },\n                 "citznat": {\n                    "title": "Percent US Citizen by Naturalization",\n                    "section": "Citizenship",\n                    "table": "b05001",\n                    "expression": ["b05001005", "/", "b05001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Citizenship (percent)",\n                    "favstyle": ["ckmeans", "7", "mh6"],\n                    "bg": "no"\n                },\n                 "notcitz": {\n                    "title": "Percent Not a US Citizen",\n                    "section": "Citizenship",\n                    "table": "b05001",\n                    "expression": ["b05001006", "/", "b05001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Citizenship (percent)",\n                    "favstyle": ["ckmeans", "7", "mh7"],\n                    "bg": "no"\n                },\n                 "borninsor": {\n                    "title": "Percent US Native, Born in State of Residence",\n                    "section": "Birthplace",\n                    "table": "b05002",\n                    "expression": ["b05002003", "/", "b05002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Birthplace (percent)",\n                    "favstyle": ["ckmeans", "7", "mh8"],\n                    "bg": "no"\n                },\n                 "bornothst": {\n                    "title": "Percent US Native, Born in Another State",\n                    "section": "Birthplace",\n                    "table": "b05002",\n                    "expression": ["b05002004", "/", "b05002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Birthplace (percent)",\n                    "favstyle": ["ckmeans", "7", "mh9"],\n                    "bg": "no"\n                },\n                 "nativeb": {\n                    "title": "Percent US Native",\n                    "section": "Birthplace",\n                    "table": "b05002",\n                    "expression": ["b05002002", "/", "b05002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Birthplace (percent)",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "no"\n                },\n                 "foreignb": {\n                    "title": "Percent Foreign Born",\n                    "section": "Birthplace",\n                    "table": "b05002",\n                    "expression": ["b05002013", "/", "b05002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Birthplace (percent)",\n                    "favstyle": ["ckmeans", "7", "mh11"],\n                    "bg": "no"\n                },\n                 "samehouse": {\n                    "title": "Percent Did Not Move",\n                    "section": "Migration",\n                    "table": "b07003",\n                    "expression": ["b07003004", "/", "b07003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Migration (percent)",\n                    "favstyle": ["ckmeans", "7", "mh12"],\n                    "bg": "no"\n                },\n                 "samecnty": {\n                    "title": "Percent Moved Within County",\n                    "section": "Migration",\n                    "table": "b07003",\n                    "expression": ["b07003007", "/", "b07003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Migration (percent)",\n                    "favstyle": ["ckmeans", "7", "sh1"],\n                    "bg": "no"\n                },\n                 "samestate": {\n                    "title": "Percent Moved from Different County Within State",\n                    "section": "Migration",\n                    "table": "b07003",\n                    "expression": ["b07003010", "/", "b07003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Migration (percent)",\n                    "favstyle": ["ckmeans", "7", "sh2"],\n                    "bg": "no"\n                },\n                 "diffstate": {\n                    "title": "Percent Moved from Different State",\n                    "section": "Migration",\n                    "table": "b07003",\n                    "expression": ["b07003013", "/", "b07003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Migration (percent)",\n                    "favstyle": ["ckmeans", "7", "sh4"],\n                    "bg": "no"\n                },\n                 "frmabroad": {\n                    "title": "Percent Moved From Abroad",\n                    "section": "Migration",\n                    "table": "b07003",\n                    "expression": ["b07003016", "/", "b07003001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Migration (percent)",\n                    "favstyle": ["ckmeans", "7", "sh5"],\n                    "bg": "no"\n                },\n                 "carall": {\n                    "title": "Percent Drove a Car Truck or Van to Work",\n                    "section": "Transportation",\n                    "table": "b08006",\n                    "expression": ["b08006002", "/", "b08006001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Transportation to Work (percent)",\n                    "favstyle": ["ckmeans", "7", "sh6"],\n                    "bg": "no"\n                },\n                 "usedpt": {\n                    "title": "Percent Used Public Transportation",\n                    "section": "Transportation",\n                    "table": "b08006",\n                    "expression": ["b08006008", "/", "b08006001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Transportation to Work (percent)",\n                    "favstyle": ["ckmeans", "7", "mh1"],\n                    "bg": "no"\n                },\n                 "bike": {\n                    "title": "Percent Biked to Work",\n                    "section": "Transportation",\n                    "table": "b08006",\n                    "expression": ["b08006014", "/", "b08006001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Transportation to Work (percent)",\n                    "favstyle": ["ckmeans", "7", "mh2"],\n                    "bg": "no"\n                },\n                 "walked": {\n                    "title": "Percent Walked to Work",\n                    "section": "Transportation",\n                    "table": "b08006",\n                    "expression": ["b08006015", "/", "b08006001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Transportation to Work (percent)",\n                    "favstyle": ["ckmeans", "7", "mh3"],\n                    "bg": "no"\n                },\n                 "home": {\n                    "title": "Percent Worked at Home",\n                    "section": "Transportation",\n                    "table": "b08006",\n                    "expression": ["b08006017", "/", "b08006001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Transportation to Work (percent)",\n                    "favstyle": ["ckmeans", "7", "mh4"],\n                    "bg": "no"\n                },\n                 "avghhsize": {\n                    "title": "Average Household Size",\n                    "section": "Housing",\n                    "table": "b25010",\n                    "expression": ["b25010001"],\n                    "type": "number",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "yes",\n                    "favtable": "Average Household Size",\n                    "favstyle": ["ckmeans", "7", "mh5"],\n                    "bg": "yes"\n                },\n                 "insured": {\n                    "title": "Percent Insured",\n                    "section": "Insurance",\n                    "table": "b27001",\n                    "expression": ["(", "b27001004", "+", "b27001007", "+", "b27001010", "+", "b27001013", "+", "b27001016", "+", "b27001019", "+", "b27001022", "+", "b27001025", "+", "b27001028", "+", "b27001032", "+", "b27001035", "+", "b27001038", "+", "b27001041", "+", "b27001044", "+", "b27001047", "+", "b27001050", "+", "b27001053", "+", "b27001056", ")", "/", "b27001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Insurance (percent)",\n                    "favstyle": ["ckmeans", "7", "mh7"],\n                    "bg": "no"\n                },\n                 "uninsured": {\n                    "title": "Percent No Insurance",\n                    "section": "Insurance",\n                    "table": "b27001",\n                    "expression": ["(", "b27001005", "+", "b27001008", "+", "b27001011", "+", "b27001014", "+", "b27001017", "+", "b27001020", "+", "b27001023", "+", "b27001026", "+", "b27001029", "+", "b27001033", "+", "b27001036", "+", "b27001039", "+", "b27001042", "+", "b27001045", "+", "b27001048", "+", "b27001051", "+", "b27001054", "+", "b27001057", ")", "/", "b27001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Insurance (percent)",\n                    "favstyle": ["ckmeans", "7", "mh8"],\n                    "bg": "no"\n                },\n                 "enrolled": {\n                    "title": "Percent Enrolled in School",\n                    "section": "Education",\n                    "table": "b14001",\n                    "expression": ["b14001002", "/", "b14001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Enrolled in School (percent)",\n                    "favstyle": ["ckmeans", "7", "mh9"],\n                    "bg": "no"\n                },\n                 "k8": {\n                    "title": "Percent of Enrolled in K-8",\n                    "section": "Education",\n                    "table": "b14001",\n                    "expression": ["(", "b14001004", "+", "b14001005", "+", "b14001006", ")", "/", "b14001002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Enrolled in School (percent)",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "no"\n                },\n                 "enrhs": {\n                    "title": "Percent of Enrolled in 9-12",\n                    "section": "Education",\n                    "table": "b14001",\n                    "expression": ["b14001007", "/", "b14001002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Enrolled in School (percent)",\n                    "favstyle": ["ckmeans", "7", "mh11"],\n                    "bg": "no"\n                },\n                 "enrcollege": {\n                    "title": "Percent of Enrolled in Colleges",\n                    "section": "Education",\n                    "table": "b14001",\n                    "expression": ["(", "b14001008", "+", "b14001009", ")", "/", "b14001002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Enrolled in School (percent)",\n                    "favstyle": ["ckmeans", "7", "mh12"],\n                    "bg": "no"\n                },\n                 "notenrolled": {\n                    "title": "Percent Not Enrolled in School",\n                    "section": "Education",\n                    "table": "b14001",\n                    "expression": ["b14001010", "/", "b14001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Enrolled in School (percent)",\n                    "favstyle": ["ckmeans", "7", "sh1"],\n                    "bg": "no"\n                },\n                 "inpoverty": {\n                    "title": "Percent in Poverty",\n                    "section": "Poverty",\n                    "table": "c17002",\n                    "expression": ["(", "c17002002", "+", "c17002003", ")", "/", "c17002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Poverty (percent)",\n                    "favstyle": ["ckmeans", "7", "sh2"],\n                    "bg": "yes"\n                },\n                 "inpov150": {\n                    "title": "Percent Below 150% Poverty",\n                    "section": "Poverty",\n                    "table": "c17002",\n                    "expression": ["(", "c17002002", "+", "c17002003", "+", "c17002004", "+", "c17002005", ")", "/", "c17002001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Poverty (percent)",\n                    "favstyle": ["ckmeans", "7", "sh4"],\n                    "bg": "yes"\n                },\n                 "disabled": {\n                    "title": "Percent Disabled",\n                    "section": "Disability",\n                    "table": "b18101",\n                    "expression": ["(", "b18101004", "+", "b18101007", "+", "b18101010", "+", "b18101013", "+", "b18101016", "+", "b18101019", "+", "b18101023", "+", "b18101026", "+", "b18101029", "+", "b18101032", "+", "b18101035", "+", "b18101038", ")", "/", "b18101001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Disability (percent)",\n                    "favstyle": ["ckmeans", "7", "sh5"],\n                    "bg": "no"\n                },\n                 "unemp": {\n                    "title": "Percent Unemployed",\n                    "section": "Employment",\n                    "table": "b23025",\n                    "expression": ["b23025005", "/", "b23025002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Unemployment (percent)",\n                    "favstyle": ["ckmeans", "7", "sh6"],\n                    "bg": "yes"\n                },\n                 "armedforces": {\n                    "title": "Percent of Labor Force in Armed Forces",\n                    "section": "Employment",\n                    "table": "b23025",\n                    "expression": ["b23025006", "/", "b23025002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Unemployment (percent)",\n                    "favstyle": ["ckmeans", "7", "mh1"],\n                    "bg": "yes"\n                },\n                 "realtaxes": {\n                    "title": "Median Real Estate Taxes Paid",\n                    "section": "Housing",\n                    "table": "b25103",\n                    "expression": ["b25103001"],\n                    "type": "currency",\n                    "minval": "1",\n                    "mininc": "1",\n                    "usezeroasnull": "yes",\n                    "favtable": "",\n                    "favstyle": ["ckmeans", "7", "mh2"],\n                    "bg": "no"\n                },\n                 "moc_wmc": {\n                    "title": "Median Monthly Owner Costs (w Mortgage)",\n                    "section": "Housing",\n                    "table": "b25088",\n                    "expression": ["b25088002"],\n                    "type": "currency",\n                    "minval": "1",\n                    "mininc": "1",\n                    "usezeroasnull": "yes",\n                    "favtable": "",\n                    "favstyle": ["ckmeans", "7", "mh3"],\n                    "bg": "yes"\n                },\n                 "moc_nmc": {\n                    "title": "Median Monthly Owner Costs (no Mortgage)",\n                    "section": "Housing",\n                    "table": "b25088",\n                    "expression": ["b25088003"],\n                    "type": "currency",\n                    "minval": "1",\n                    "mininc": "1",\n                    "usezeroasnull": "yes",\n                    "favtable": "",\n                    "favstyle": ["ckmeans", "7", "mh4"],\n                    "bg": "yes"\n                },\n                 "hhalone": {\n                    "title": "Pct of Households w Householder Living Alone",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001008", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "",\n                    "favstyle": ["ckmeans", "7", "mh5"],\n                    "bg": "yes"\n                },\n                 "hhnalone": {\n                    "title": "Pct of Households w Householder Not Living Alone",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001009", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh6"],\n                    "bg": "yes"\n                },\n                 "mcfhh": {\n                    "title": "Percent Married Couple Family Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001003", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh7"],\n                    "bg": "yes"\n                },\n                 "mhhnwphh": {\n                    "title": "Percent Male Householder, No Wife Present Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001005", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh8"],\n                    "bg": "yes"\n                },\n                 "fhhnhphh": {\n                    "title": "Percent Female Householder, No Husband Present Households",\n                    "section": "Household",\n                    "table": "b11001",\n                    "expression": ["b11001006", "/", "b11001001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "Household Type (total)",\n                    "favstyle": ["ckmeans", "7", "mh9"],\n                    "bg": "yes"\n                },\n                 "hhwchild": {\n                    "title": "Percent Households w Children Under 18 Present",\n                    "section": "Household",\n                    "table": "b11005",\n                    "expression": ["b11005002", "/", "b11005001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": "0.01",\n                    "usezeroasnull": "no",\n                    "favtable": "",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "yes"\n                },\n                "cbhm": {\n                    "title": "Cost Burdened Households (with a Mortgage)",\n                    "section": "Housing",\n                    "table": "b25101",\n                    "expression": ["(", "b25101006", "+", "b25101010", "+", "b25101014", "+", "b25101020", "+", "b25101022", ")", "/", "b25101002"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": ".01",\n                    "usezeroasnull": "no",\n                    "favtable": "Cost Burdened Households (with a Mortgage)",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "yes"\n                },\n                "elvw": {\n                    "title": "Population 5 and Over That Speaks English Less Than Very Well",\n                    "section": "Language",\n                    "table": "b06007",\n                    "expression": ["(", "b06007008", "+", "b06007005", ")", "/", "b06007001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": ".01",\n                    "usezeroasnull": "no",\n                    "favtable": "Place of Birth by Language Spoken at Home and Ability to Speak English",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "no"\n                },\n                "p5ss": {\n                    "title": "Population 5 and Over That Speaks Spanish",\n                    "section": "Language",\n                    "table": "b06007",\n                    "expression": ["b06007003", "/", "b06007001"],\n                    "type": "percent",\n                    "minval": "0",\n                    "mininc": ".01",\n                    "usezeroasnull": "no",\n                    "favtable": "Place of Birth by Language Spoken at Home and Ability to Speak English",\n                    "favstyle": ["ckmeans", "7", "mh10"],\n                    "bg": "no"\n                }\n        */\n    },\n    "c2010": {\n        "mhi": {\n            "title": "Median Household Income",\n            "table": "b19013",\n            "section": "Income",\n            "expression": ["b19013001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Household Income",\n            "favstyle": ["ckmeans", "7", "mh1"],\n            "bg": "yes"\n        }\n    },\n    "c2000": {\n        "mhi": {\n            "title": "Median Household Income",\n            "table": "b19013",\n            "section": "Income",\n            "expression": ["b19013001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Household Income",\n            "favstyle": ["ckmeans", "7", "mh1"],\n            "bg": "yes"\n        }\n    },\n    "c1990": {\n        "mhi": {\n            "title": "Median Household Income",\n            "table": "b19013",\n            "section": "Income",\n            "expression": ["b19013001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Household Income",\n            "favstyle": ["ckmeans", "7", "mh1"],\n            "bg": "yes"\n        }\n    },\n    "c1980": {\n        "mhi": {\n            "title": "Median Household Income",\n            "table": "b19013",\n            "section": "Income",\n            "expression": ["b19013001"],\n            "type": "currency",\n            "minval": "1",\n            "mininc": "1",\n            "usezeroasnull": "yes",\n            "favtable": "Median Household Income",\n            "favstyle": ["ckmeans", "7", "mh1"],\n            "bg": "yes"\n        }\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},,,,,,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nexports.default = function (map) {\n\n    var current_store_values = _reduxSetup.Store.getState();\n    var theme = current_store_values.theme;\n    var geoscheme = current_store_values.geoscheme;\n    var dataset = current_store_values.dataset;\n    var zoom = map.getZoom();\n    var zoom_breaks = _geoscheme2.default[dataset][geoscheme];\n\n    var geography_name = getGeographyName(zoom_breaks, zoom);\n    var features = map.queryRenderedFeatures({\n        layers: [geography_name + \'-fill\']\n    });\n\n    var all_geonums = Array.from(new Set(features.map(function (feature) {\n        return feature.properties.geonum;\n    })));\n\n    var comma_delimited_geonums = all_geonums.join(",");\n\n    (0, _updateLegend2.default)(theme, geography_name);\n\n    var previously_gathered_data = getPreviousData(_datatree2.default[dataset][theme].table, comma_delimited_geonums, dataset);\n\n    previously_gathered_data.then(function (data) {\n\n        var succesful_records = getSuccessfulRecords(data);\n        var succesful_geonums = getSuccessfulGeonums(succesful_records);\n        var unfound_geonums = getUnfoundGeonums(succesful_geonums, comma_delimited_geonums.split(",") || []);\n\n        if (unfound_geonums.length > 0) {\n            fetchCensusData(theme, unfound_geonums.join(","), dataset).then(function (acs_data) {\n                var combined_data = succesful_records.concat(acs_data);\n                paintMap(theme, combined_data, geography_name, dataset);\n            });\n        } else {\n            paintMap(theme, succesful_records, geography_name, dataset);\n        }\n\n        function paintMap(theme, map_data, geography_name, dataset) {\n            map.setPaintProperty(geography_name + \'-fill\', \'fill-opacity\', 0.8); // make layer visible\n            map.setPaintProperty(geography_name + \'-fill\', \'fill-color\', getMapStyle(theme, map_data, geography_name, dataset));\n        }\n    });\n};\n\nvar _localforage = __webpack_require__(70);\n\nvar _localforage2 = _interopRequireDefault(_localforage);\n\nvar _reduxSetup = __webpack_require__(1);\n\nvar _updateLegend = __webpack_require__(55);\n\nvar _updateLegend2 = _interopRequireDefault(_updateLegend);\n\nvar _computed_breaks = __webpack_require__(19);\n\nvar _computed_breaks2 = _interopRequireDefault(_computed_breaks);\n\nvar _datatree = __webpack_require__(9);\n\nvar _datatree2 = _interopRequireDefault(_datatree);\n\nvar _colortree = __webpack_require__(18);\n\nvar _colortree2 = _interopRequireDefault(_colortree);\n\nvar _geoscheme = __webpack_require__(3);\n\nvar _geoscheme2 = _interopRequireDefault(_geoscheme);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Parser = __webpack_require__(16).Parser; /* global fetch */\n\nfunction getGeographyName(geoscheme, zoom) {\n\n    var geography_name = "";\n\n    Object.keys(geoscheme).forEach(function (key) {\n        if (zoom >= geoscheme[key][0] && zoom < geoscheme[key][1]) {\n            geography_name = key;\n        }\n    });\n\n    return geography_name;\n}\n\nfunction getUnfoundGeonums(succesful_geonums, all_geonums) {\n    return all_geonums.filter(function (geonum) {\n        return !succesful_geonums.includes(geonum);\n    });\n}\n\nfunction getSuccessfulRecords(data) {\n\n    if (!data) {\n        return [];\n    }\n\n    return data.filter(function (record) {\n        if (record) {\n            return record;\n        }\n    });\n}\n\nfunction getSuccessfulGeonums(data) {\n    return data.map(function (record) {\n        return record.geonum;\n    });\n}\n\nfunction fetchCensusData(theme, comma_delimited_geonums, dataset) {\n    // load census data\n    return fetch(\'https://gis.dola.colorado.gov/capi/demog?limit=99999&db=\' + dataset + \'&table=\' + _datatree2.default[dataset][theme].table + \'&geonum=\' + comma_delimited_geonums).then(function (fetch_response) {\n        return fetch_response.json();\n    }).then(function (census_response) {\n\n        // save each returned value to IndexedDB\n        census_response.data.forEach(function (record) {\n            var key = dataset + ":" + _datatree2.default[dataset][theme].table + ":" + record.geonum;\n            _localforage2.default.setItem(key, record).catch(function (err) {\n                console.log(err);\n            });\n        });\n\n        return census_response.data;\n    });\n}\n\nfunction getPreviousData(table, comma_delimited_geonums, dataset) {\n\n    if (!comma_delimited_geonums) {\n        return Promise.all([]);\n    }\n\n    // create Promise Array\n    var previous_data = comma_delimited_geonums.split(",").map(function (geonum) {\n        var key = dataset + ":" + table + ":" + geonum;\n        return _localforage2.default.getItem(key);\n    });\n\n    return Promise.all(previous_data);\n}\n\nfunction getMapStyle(style_code, acs_data, geography_name, dataset) {\n\n    var expression = _datatree2.default[dataset][style_code].expression;\n    var default_color = "#fff"; // lowest break color\n    var null_color = "#fff";\n    var zero_color = "#fff";\n\n    var breaks_style = _datatree2.default[dataset][style_code].favstyle[0] + _datatree2.default[dataset][style_code].favstyle[1];\n    var color_style = _datatree2.default[dataset][style_code].favstyle[2] + \'_\' + _datatree2.default[dataset][style_code].favstyle[1];\n\n    var array = _computed_breaks2.default[dataset][style_code][geography_name][breaks_style];\n    var colorscheme = _colortree2.default[color_style];\n\n    // set up parser (https://github.com/silentmatt/expr-eval)\n    var parser = new Parser();\n\n    var exp = parser.parse(expression.join(""));\n\n    // iterate through acs data\n    var stops = acs_data.map(function (row) {\n\n        var evaluated_value = void 0;\n\n        // don\'t attempt to use expression parser if array is only 1 element\n        // which means single variable\n        if (expression.length > 1) {\n\n            var replacers_object = {};\n\n            getUniqueExpressionKeys(expression).forEach(function (key) {\n                replacers_object[key] = row[key];\n            });\n\n            evaluated_value = exp.evaluate(replacers_object);\n        } else {\n            evaluated_value = row[expression[0]];\n        }\n\n        // default case\n        var color = default_color;\n\n        // iterate through array breaks\n        array.forEach(function (entry, i) {\n            if (evaluated_value > entry) {\n                color = colorscheme[i];\n            }\n        });\n\n        // null case\n        if (!evaluated_value) {\n            color = null_color;\n        }\n\n        // zero case: always after the null case\n        if (evaluated_value === 0) {\n            color = zero_color;\n        }\n\n        return [row.geonum, color];\n    });\n\n    return {\n        "property": "geonum",\n        "type": "categorical",\n        "default": "transparent",\n        "stops": stops\n    };\n}\n\nfunction getUniqueExpressionKeys(expression) {\n\n    // extract data fields from expression (example: ["b01001001", "b01001002"])\n    var keys = expression.filter(function (d) {\n        if (d !== "+" && d !== "-" & d !== "(" & d !== ")" & d !== "*" & d !== "/") {\n            return true;\n        }\n    });\n\n    var unique_keys = Array.from(new Set(keys));\n\n    return unique_keys;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},,,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.default = {\n\n    "mh1_5": ["#edf8fb", "#b2e2e2", "#66c2a4", "#2ca25f", "#006d2c"],\n    "mh1_7": ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"],\n    "mh1_9": ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"],\n\n    "mh2_5": ["#edf8fb", "#b3cde3", "#8c96c6", "#8856a7", "#810f7c"],\n\n    "mh2_7": ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"],\n\n    "mh2_9": ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"],\n\n    "mh3_5": ["#f0f9e8", "#bae4bc", "#7bccc4", "#43a2ca", "#0868ac"],\n    "mh3_7": ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#08589e"],\n    "mh3_9": ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"],\n    "mh4_5": ["#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000"],\n    "mh4_7": ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"],\n    "mh4_9": ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"],\n    "mh5_5": ["#f1eef6", "#bdc9e1", "#74a9cf", "#2b8cbe", "#045a8d"],\n    "mh5_7": ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#034e7b"],\n    "mh5_9": ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"],\n    "mh6_5": ["#f6eff7", "#bdc9e1", "#67a9cf", "#1c9099", "#016c59"],\n    "mh6_7": ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"],\n    "mh6_9": ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"],\n    "mh7_5": ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"],\n    "mh7_7": ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"],\n    "mh7_9": ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"],\n    "mh8_5": ["#feebe2", "#fbb4b9", "#f768a1", "#c51b8a", "#7a0177"],\n    "mh8_7": ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"],\n    "mh8_9": ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"],\n    "mh9_5": ["#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837"],\n    "mh9_7": ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"],\n    "mh9_9": ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#006837", "#004529"],\n    "mh10_5": ["#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#253494"],\n    "mh10_7": ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"],\n    "mh10_9": ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"],\n    "mh11_5": ["#ffffd4", "#fed98e", "#fe9929", "#d95f0e", "#993404"],\n    "mh11_7": ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"],\n    "mh11_9": ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"],\n    "mh12_5": ["#ffffb2", "#fecc5c", "#fd8d3c", "#f03b20", "#bd0026"],\n    "mh12_7": ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"],\n    "mh12_9": ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"],\n    "sh1_5": ["#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c"],\n    "sh1_7": ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"],\n    "sh1_9": ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"],\n    "sh2_5": ["#edf8e9", "#bae4b3", "#74c476", "#31a354", "#006d2c"],\n    "sh2_7": ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"],\n    "sh2_9": ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"],\n    "sh3_5": ["#f7f7f7", "#cccccc", "#969696", "#636363", "#252525"],\n    "sh3_7": ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525"],\n    "sh3_9": ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"],\n    "sh4_5": ["#feedde", "#fdbe85", "#fd8d3c", "#e6550d", "#a63603"],\n    "sh4_7": ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"],\n    "sh4_9": ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"],\n    "sh5_5": ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#756bb1", "#54278f"],\n    "sh5_7": ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"],\n    "sh5_9": ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"],\n    "sh6_5": ["#fee5d9", "#fcae91", "#fb6a4a", "#de2d26", "#a50f15"],\n    "sh6_7": ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"],\n    "sh6_9": ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"],\n    "ds1_5": ["#a6611a", "#dfc27d", "#f5f5f5", "#80cdc1", "#018571"],\n    "ds1_7": ["#8c510a", "#d8b365", "#f6e8c3", "#f5f5f5", "#c7eae5", "#5ab4ac", "#01665e"],\n    "ds1_8": ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e"],\n    "ds1_9": ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e"],\n    "ds1_11": ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"],\n    "ds2_5": ["#d01c8b", "#f1b6da", "#f7f7f7", "#b8e186", "#4dac26"],\n    "ds2_7": ["#c51b7d", "#e9a3c9", "#fde0ef", "#f7f7f7", "#e6f5d0", "#a1d76a", "#4d9221"],\n    "ds2_8": ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"],\n    "ds2_9": ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"],\n    "ds2_11": ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"],\n    "ds3_5": ["#7b3294", "#c2a5cf", "#f7f7f7", "#a6dba0", "#008837"],\n    "ds3_7": ["#762a83", "#af8dc3", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#7fbf7b", "#1b7837"],\n    "ds3_8": ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"],\n    "ds3_9": ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"],\n    "ds3_11": ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"],\n    "ds4_5": ["#e66101", "#fdb863", "#f7f7f7", "#b2abd2", "#5e3c99"],\n    "ds4_7": ["#b35806", "#f1a340", "#fee0b6", "#f7f7f7", "#d8daeb", "#998ec3", "#542788"],\n    "ds4_8": ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788"],\n    "ds4_9": ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788"],\n    "ds4_11": ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"],\n    "ds5_5": ["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"],\n    "ds5_7": ["#b2182b", "#ef8a62", "#fddbc7", "#f7f7f7", "#d1e5f0", "#67a9cf", "#2166ac"],\n    "ds5_8": ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"],\n    "ds5_9": ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"],\n    "ds5_11": ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"],\n    "ds6_5": ["#ca0020", "#f4a582", "#ffffff", "#bababa", "#404040"],\n    "ds6_7": ["#b2182b", "#ef8a62", "#fddbc7", "#ffffff", "#e0e0e0", "#999999", "#4d4d4d"],\n    "ds6_8": ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"],\n    "ds6_9": ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"],\n    "ds6_11": ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"],\n    "ds7_5": ["#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6"],\n    "ds7_7": ["#d73027", "#fc8d59", "#fee090", "#ffffbf", "#e0f3f8", "#91bfdb", "#4575b4"],\n    "ds7_8": ["#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"],\n    "ds7_9": ["#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"],\n    "ds7_11": ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"],\n    "ds8_5": ["#d7191c", "#fdae61", "#ffffbf", "#a6d96a", "#1a9641"],\n    "ds8_7": ["#d73027", "#fc8d59", "#fee08b", "#ffffbf", "#d9ef8b", "#91cf60", "#1a9850"],\n    "ds8_8": ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"],\n    "ds8_9": ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"],\n    "ds8_11": ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"],\n    "ds9_5": ["#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"],\n    "ds9_7": ["#d53e4f", "#fc8d59", "#fee08b", "#ffffbf", "#e6f598", "#99d594", "#3288bd"],\n    "ds9_8": ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"],\n    "ds9_9": ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"],\n    "ds9_11": ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"]\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.default = {\n    "acs1014": {\n        "mhi": {\n            "state": {\n                "ckmeans5": [64792, 55579, 48737, 39464],\n                "ckmeans7": [39464, 46235, 51872, 56423, 64792, 69899],\n                "ckmeans9": [69899, 64792, 58687, 55579, 51872, 47764, 44621, 39464],\n                "stddev7": [67329.0478109798, 62320.198540653204, 57311.3492703266, 52302.5, 47293.6507296734, 42284.801459346796, 37275.952189020194],\n                "stddev8": [77346.74635163302, 67329.0478109798, 57311.3492703266, 47293.6507296734, 37275.952189020194, 27258.25364836699],\n                "quantile5": [60828, 54447, 49342, 46235],\n                "quantile7": [65986, 59448, 52738, 50338, 47334, 44968],\n                "quantile9": [68201, 60294, 57166, 52716, 50521, 48804, 46693, 43511],\n                "quantile11": [69235, 61489, 59448, 56423, 52716, 50521, 48849, 47334, 45033, 43342],\n                "min": 19686,\n                "max": 74149,\n                "mean": 53468.78846153846,\n                "median": 52302.5,\n                "stddev": 10017.698540653204,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [75998, 58456, 46965, 37648],\n                "ckmeans7": [34653, 41665, 48679, 56949, 67286, 81736],\n                "ckmeans9": [89886, 77335, 66693, 57214, 49874, 44138, 38925, 33224],\n                "stddev7": [64141.21496124395, 57591.97664082931, 51042.73832041465, 44493.5, 37944.26167958535, 31395.023359170696, 24845.785038756047],\n                "stddev8": [77239.69160207326, 64141.21496124395, 51042.73832041465, 37944.26167958535, 24845.785038756047, 11747.30839792674],\n                "quantile5": [54961, 47088.5, 41777.5, 36501],\n                "quantile7": [59560, 51000, 46074, 42476, 38802, 34614],\n                "quantile9": [62412, 53900, 49527, 45606, 42926, 40143, 37009, 33293],\n                "quantile11": [65124, 55805, 51454, 48306, 45472, 43107, 40943, 38556, 36094, 32553],\n                "min": 21300,\n                "max": 110133,\n                "mean": 46772.157,\n                "median": 44493.5,\n                "stddev": 13098.476640829304,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [130556, 86250, 57431, 35879],\n                "ckmeans7": [30800, 47007, 63938, 85511, 111300, 145694],\n                "ckmeans9": [150000, 117114, 92762, 72908, 58152, 44946, 32469, 17464],\n                "stddev7": [96046.49513150136, 80298.83008766758, 64551.16504383379, 48803.5, 33055.83495616621, 17308.169912332425, 1560.5048684986396],\n                "stddev8": [127541.82521916894, 96046.49513150136, 64551.16504383379, 33055.83495616621, 1560.5048684986396, -29934.82521916894],\n                "quantile5": [75429.5, 55603.5, 42116, 30833.5],\n                "quantile7": [86862, 64777, 53482, 43958, 36130, 27545],\n                "quantile9": [96438, 71563, 60972, 52109, 45000, 38571, 32128, 25368],\n                "quantile11": [102708, 77761, 65703, 58859, 51310, 45556, 40580, 35375, 29414, 23750],\n                "min": 0,\n                "max": 202700,\n                "mean": 55637.808,\n                "median": 48803.5,\n                "stddev": 31495.330087667575,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [97460, 70236, 51389, 35236],\n                "ckmeans7": [29333, 42182, 56266, 73731, 97460, 135417],\n                "ckmeans9": [135417, 99950, 80240, 66382, 55991, 46547, 37330, 26432],\n                "stddev7": [79273.1948964509, 68143.79659763393, 57014.39829881697, 45885, 34755.60170118303, 23626.203402366064, 12496.805103549093],\n                "stddev8": [101531.99149408484, 79273.1948964509, 57014.39829881697, 34755.60170118303, 12496.805103549093, -9761.99149408484],\n                "quantile5": [65899.5, 50993, 41859, 32645.5],\n                "quantile7": [72237, 58483, 49306, 43000, 36484, 29893],\n                "quantile9": [77426, 63483, 54924, 48750, 43477, 38581, 33750, 27775],\n                "quantile11": [82683, 67986, 59309, 53185, 48311, 43783, 40230, 36006, 31870, 26290],\n                "min": 0,\n                "max": 186949,\n                "mean": 50303.631,\n                "median": 45885,\n                "stddev": 22258.796597633936,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [96427, 65625, 44063, 18750],\n                "ckmeans7": [14318, 31750, 44375, 57750, 75833, 107639],\n                "ckmeans9": [121432, 91806, 74000, 59688, 48324, 38704, 29129, 12292],\n                "stddev7": [78636.22966831017, 66769.31977887345, 54902.40988943673, 43035.5, 31168.590110563273, 19301.68022112655, 7434.770331689826],\n                "stddev8": [102370.04944718363, 78636.22966831017, 54902.40988943673, 31168.590110563273, 7434.770331689826, -16299.049447183628],\n                "quantile5": [63386, 49188, 39522.5, 30666.5],\n                "quantile7": [70481, 56330, 47354, 40657, 34750, 26250],\n                "quantile9": [75256, 61607, 53125, 46458, 41111, 36781, 32103, 23158],\n                "quantile11": [79013, 64911, 57750, 51250, 45804, 41500, 38162, 34250, 29028, 21250],\n                "min": 0,\n                "max": 163151,\n                "mean": 46636.031,\n                "median": 43035.5,\n                "stddev": 23733.81977887345,\n                "sample": []\n            }\n        },\n        "mhv": {\n            "bg": {\n                "ckmeans5": [568200, 322800, 221300, 123500],\n                "ckmeans7": [65000, 147700, 215600, 285500, 372100, 568200],\n                "ckmeans9": [865200, 525600, 386600, 304200, 242800, 193000, 138900, 61100],\n                "stddev7": [373641.4349220594, 321227.62328137294, 268813.8116406865, 216400, 163986.18835931353, 111572.37671862704, 59158.565077940555],\n                "stddev8": [478469.05820343236, 373641.4349220594, 268813.8116406865, 163986.18835931353, 59158.565077940555, -45669.05820343239],\n                "quantile5": [285600, 238000, 195950, 155450],\n                "quantile7": [314700, 263100, 232300, 199800, 171400, 129200],\n                "quantile9": [333900, 276700, 251800, 228400, 203000, 181800, 161400, 112500],\n                "quantile11": [350800, 295500, 265900, 244800, 225700, 205600, 189100, 169800, 152000, 101300],\n                "min": 0,\n                "max": 1000001,\n                "mean": 222569.801,\n                "median": 216400,\n                "stddev": 104827.62328137296,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [774000, 476700, 274700, 152000],\n                "ckmeans7": [119800, 204400, 291800, 401200, 580000, 810700],\n                "ckmeans9": [810700, 580000, 417100, 318300, 248200, 195000, 140100, 74500],\n                "stddev7": [447070.9592426424, 364897.3061617616, 282723.65308088076, 200550, 118376.34691911921, 36202.693838238425, -45970.95924264236],\n                "stddev8": [611418.2654044039, 447070.9592426424, 282723.65308088076, 118376.34691911921, -45970.95924264236, -210318.2654044039],\n                "quantile5": [299550, 226000, 179100, 128200],\n                "quantile7": [350100, 260100, 220500, 184700, 154800, 108700],\n                "quantile9": [376400, 286000, 243600, 216100, 188700, 166900, 138000, 97200],\n                "quantile11": [406700, 319400, 265200, 235000, 212600, 190100, 171300, 151300, 122400, 84400],\n                "min": 0,\n                "max": 1000001,\n                "mean": 236197.513,\n                "median": 200550,\n                "stddev": 164347.30616176157,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [454500, 319900, 212500, 148000],\n                "ckmeans7": [126300, 153600, 212500, 257200, 319900, 454500],\n                "ckmeans9": [454500, 371400, 319900, 274500, 232900, 185200, 153600, 126300],\n                "stddev7": [292217.70181799575, 249445.1345453305, 206672.56727266527, 163900, 121127.43272733474, 78354.86545466949, 35582.29818200423],\n                "stddev8": [377762.8363633263, 292217.70181799575, 206672.56727266527, 121127.43272733474, 35582.29818200423, -49962.83636332629],\n                "quantile5": [243500, 185200, 148000, 129400],\n                "quantile7": [274500, 234100, 173600, 156200, 135700, 122700],\n                "quantile9": [287500, 241200, 212500, 167100, 159300, 139900, 129600, 121600],\n                "quantile11": [319900, 246300, 234100, 189300, 167100, 159300, 140400, 135700, 126300, 120200],\n                "min": 100200,\n                "max": 504500,\n                "mean": 193273.07692307694,\n                "median": 163900,\n                "stddev": 85545.13454533051,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [496800, 310300, 186900, 115300],\n                "ckmeans7": [101600, 147700, 207200, 286600, 412800, 664100],\n                "ckmeans9": [664100, 483800, 386900, 300000, 225400, 171900, 131800, 95800],\n                "stddev7": [252872.24089201613, 207414.82726134406, 161957.41363067203, 116500, 71042.58636932797, 25585.17273865592, -19872.240892016125],\n                "stddev8": [343787.06815336016, 252872.24089201613, 161957.41363067203, 71042.58636932797, -19872.240892016125, -110787.06815336019],\n                "quantile5": [181600, 131500, 101100, 82400],\n                "quantile7": [212300, 156700, 126000, 105300, 88100, 77100],\n                "quantile9": [235200, 174400, 144000, 123900, 107300, 92800, 84200, 73600],\n                "quantile11": [251600, 189300, 159200, 137800, 122600, 108600, 96700, 87700, 81000, 71500],\n                "min": 0,\n                "max": 785100,\n                "mean": 142760.2,\n                "median": 116500,\n                "stddev": 90914.82726134408,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [699400, 386700, 207500, 103300],\n                "ckmeans7": [61600, 139200, 230700, 386700, 588500, 861100],\n                "ckmeans9": [861100, 627500, 456500, 317400, 215800, 147400, 95000, 39400],\n                "stddev7": [365105.3390159933, 285120.22601066215, 205135.11300533108, 125150, 45164.88699466891, -34820.22601066218, -114805.33901599329],\n                "stddev8": [525075.5650266554, 365105.3390159933, 205135.11300533108, 45164.88699466891, -114805.33901599329, -274775.56502665544],\n                "quantile5": [222400, 156900, 108100, 72350],\n                "quantile7": [262600, 186200, 150000, 113700, 88300, 55500],\n                "quantile9": [300900, 209400, 172300, 143800, 116600, 96300, 78300, 43600],\n                "quantile11": [346700, 235000, 189600, 165600, 140800, 118800, 102000, 86300, 66500, 23800],\n                "min": 0,\n                "max": 1000001,\n                "mean": 168971.608,\n                "median": 125150,\n                "stddev": 159970.22601066218,\n                "sample": []\n            }\n        },\n        "mfi": {\n            "state": {\n                "ckmeans5": [80371, 68787, 60414, 49125],\n                "ckmeans7": [49125, 59068, 64636, 70187, 77939, 86132],\n                "ckmeans9": [86132, 80371, 76190, 70187, 64636, 59068, 54724, 49125],\n                "stddev7": [83069.57461392088, 77119.71640928059, 71169.8582046403, 65220, 59270.141795359705, 53320.28359071941, 47370.425386079114],\n                "stddev8": [94969.29102320148, 83069.57461392088, 71169.8582046403, 59270.141795359705, 47370.425386079114, 35470.70897679852],\n                "quantile5": [73817, 67612, 61684, 56922],\n                "quantile7": [80371, 72683, 67232, 61890, 59068, 55459],\n                "quantile9": [82791, 73217, 70967, 66829, 61958, 60440, 57176, 54801],\n                "quantile11": [83714, 76190, 72683, 70187, 66829, 61958, 60581, 59068, 56755, 54724],\n                "min": 23235,\n                "max": 89416,\n                "mean": 65886.61538461539,\n                "median": 65220,\n                "stddev": 11899.71640928059,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [143036, 102647, 75833, 49261],\n                "ckmeans7": [36396, 59167, 79375, 101750, 133250, 183815],\n                "ckmeans9": [192852, 142115, 114722, 94425, 77054, 59938, 43056, 21298],\n                "stddev7": [126883.57781708174, 109465.88521138782, 92048.19260569391, 74630.5, 57212.80739430609, 39795.114788612176, 22377.422182918264],\n                "stddev8": [161718.96302846956, 126883.57781708174, 92048.19260569391, 57212.80739430609, 22377.422182918264, -12457.96302846956],\n                "quantile5": [104031.5, 82939, 68201.5, 51130.5],\n                "quantile7": [111892, 93636, 81136, 69974, 59545, 45474],\n                "quantile9": [119107, 100735, 88958, 79643, 70833, 63516, 53318, 41389],\n                "quantile11": [124865, 106875, 95000, 86797, 78992, 71923, 65417, 57679, 48875, 38438],\n                "min": 0,\n                "max": 250001,\n                "mean": 78986.035,\n                "median": 74630.5,\n                "stddev": 34835.385211387824,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [90387, 69649, 55952, 45442],\n                "ckmeans7": [41319, 48425, 55334, 63342, 74569, 91795],\n                "ckmeans9": [105275, 90387, 79073, 69649, 61655, 54680, 48045, 40980],\n                "stddev7": [77373.95934163204, 69957.47289442137, 62540.986447210686, 55124.5, 47708.013552789314, 40291.527105578636, 32875.04065836796],\n                "stddev8": [92206.93223605341, 77373.95934163204, 62540.986447210686, 47708.013552789314, 32875.04065836796, 18042.067763946587],\n                "quantile5": [66395, 58294, 51508, 45805],\n                "quantile7": [71113, 62036, 57480, 52270, 48194, 43414],\n                "quantile9": [75801, 65283, 60270, 56971, 52541, 49677, 46555, 42148],\n                "quantile11": [78167, 67625, 62502, 59402, 56696, 53056, 50433, 47773, 45188, 41183],\n                "min": 26112,\n                "max": 129474,\n                "mean": 57324.981,\n                "median": 55124.5,\n                "stddev": 14832.972894421364,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [185656, 115762, 80579, 52756],\n                "ckmeans7": [40139, 60707, 80579, 103086, 135192, 200938],\n                "ckmeans9": [200938, 147500, 115762, 95000, 78456, 62617, 46534, 23651],\n                "stddev7": [121534.25131424297, 103767.33420949531, 86000.41710474766, 68233.5, 50466.582895252344, 32699.66579050469, 14932.748685757033],\n                "stddev8": [157068.0855237383, 121534.25131424297, 86000.41710474766, 50466.582895252344, 14932.748685757033, -20601.08552373828],\n                "quantile5": [96521, 75586, 61459.5, 48451],\n                "quantile7": [104605, 85929, 73967, 63077, 54063, 43729],\n                "quantile9": [110833, 93362, 81005, 72917, 64083, 56875, 50292, 40320],\n                "quantile11": [116833, 98355, 87625, 78114, 72240, 64654, 58333, 53281, 46882, 37679],\n                "min": 0,\n                "max": 250001,\n                "mean": 74258.99,\n                "median": 68233.5,\n                "stddev": 35533.83420949531,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [135625, 81250, 52750, 21250],\n                "ckmeans7": [18125, 42250, 59063, 78247, 99984, 149101],\n                "ckmeans9": [149101, 102109, 82772, 67386, 55417, 44375, 33333, 14375],\n                "stddev7": [94861.357918533, 80532.57194568866, 66203.78597284433, 51875, 37546.21402715567, 23217.428054311335, 8888.642081466998],\n                "stddev8": [123518.92986422166, 94861.357918533, 66203.78597284433, 37546.21402715567, 8888.642081466998, -19768.92986422166],\n                "quantile5": [73886.5, 58229, 46464, 35417],\n                "quantile7": [81563, 66667, 56250, 47917, 40417, 30000],\n                "quantile9": [88008, 72375, 62813, 55625, 49063, 43250, 36250, 25179],\n                "quantile11": [91120, 75734, 67750, 61250, 54583, 49750, 44813, 39688, 33889, 18125],\n                "min": 0,\n                "max": 201797,\n                "mean": 54133.322,\n                "median": 51875,\n                "stddev": 28657.571945688665,\n                "sample": []\n            }\n        },\n        "pci": {\n            "state": {\n                "ckmeans5": [46502, 32829, 27907, 20956],\n                "ckmeans7": [20956, 25427, 28912, 31642, 36359, 46502],\n                "ckmeans9": [46502, 36359, 32829, 30765, 28912, 25977, 23741, 20956],\n                "stddev7": [35108.59733574185, 32489.8982238279, 29871.19911191395, 27252.5, 24633.80088808605, 22015.1017761721, 19396.402664258152],\n                "stddev8": [40345.99555956975, 35108.59733574185, 29871.19911191395, 24633.80088808605, 19396.402664258152, 14159.004440430253],\n                "quantile5": [31642, 28912, 26311, 24695],\n                "quantile7": [33129, 30191, 27621, 26513, 25427, 23948],\n                "quantile9": [33958, 31233, 29552, 27367, 26515, 25977, 24775, 23741],\n                "quantile11": [36359, 31674, 30191, 29535, 27367, 26515, 26006, 25427, 24312, 23237],\n                "min": 11331,\n                "max": 46502,\n                "mean": 28159.365384615383,\n                "median": 27252.5,\n                "stddev": 5237.398223827899,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [95461, 53449, 33733, 21786],\n                "ckmeans7": [17128, 26699, 36828, 51976, 83961, 148918],\n                "ckmeans9": [148918, 98354, 73126, 51976, 39613, 30811, 23202, 14894],\n                "stddev7": [54097.64794815273, 45315.43196543516, 36533.21598271758, 27751, 18968.78401728242, 10186.568034564847, 1404.3520518472724],\n                "stddev8": [71662.07991358789, 54097.64794815273, 36533.21598271758, 18968.78401728242, 1404.3520518472724, -16160.079913587884],\n                "quantile5": [38545, 30611.5, 25454, 19798.5],\n                "quantile7": [42633, 34740, 29852, 26124, 22520, 17783],\n                "quantile9": [45203, 37386, 32949, 29348, 26515, 23742, 20442, 16509],\n                "quantile11": [47708, 39786, 35169, 31792, 29146, 26932, 24487, 22196, 19247, 15611],\n                "min": 0,\n                "max": 196937,\n                "mean": 31036.06,\n                "median": 27751,\n                "stddev": 17564.431965435153,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [42446, 31494, 24802, 19969],\n                "ckmeans7": [17517, 21080, 24570, 28648, 33844, 42446],\n                "ckmeans9": [43548, 35987, 31494, 27462, 24570, 21986, 19300, 16228],\n                "stddev7": [32137.084584855445, 29024.2230565703, 25911.36152828515, 22798.5, 19685.63847171485, 16572.7769434297, 13459.915415144555],\n                "stddev8": [38362.807641425745, 32137.084584855445, 25911.36152828515, 19685.63847171485, 13459.915415144555, 7234.192358574255],\n                "quantile5": [27681, 23970, 21542.5, 19044],\n                "quantile7": [29499, 25854, 23686, 21774, 20154, 18139],\n                "quantile9": [30863, 27132, 25020, 23459, 21986, 20737, 19412, 17694],\n                "quantile11": [32700, 28138, 26144, 24446, 23415, 22132, 21157, 20022, 18774, 17344],\n                "min": 8200,\n                "max": 58004,\n                "mean": 23838.417,\n                "median": 22798.5,\n                "stddev": 6225.723056570298,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [75566, 47513, 33506, 22247],\n                "ckmeans7": [17190, 25402, 32507, 40645, 52031, 75566],\n                "ckmeans9": [95394, 68896, 50982, 40986, 34168, 28196, 22247, 15032],\n                "stddev7": [50913.83422858908, 43835.22281905939, 36756.611409529694, 29678, 22599.388590470306, 15520.77718094061, 8442.165771410913],\n                "stddev8": [65071.05704764848, 50913.83422858908, 36756.611409529694, 22599.388590470306, 8442.165771410913, -5715.057047648479],\n                "quantile5": [39829.5, 32641.5, 27415, 21605.5],\n                "quantile7": [43332, 36616, 31672, 28099, 24571, 19101],\n                "quantile9": [45856, 38888, 34784, 31252, 28429, 25689, 22669, 17648],\n                "quantile11": [48863, 41112, 37107, 33746, 30928, 28717, 26512, 24230, 20926, 16149],\n                "min": 0,\n                "max": 127349,\n                "mean": 31813.252,\n                "median": 29678,\n                "stddev": 14157.22281905939,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [77242, 38287, 23650, 12851],\n                "ckmeans7": [8211, 18009, 25850, 35418, 51380, 92666],\n                "ckmeans9": [92666, 51380, 37327, 29269, 23145, 18217, 13443, 6217],\n                "stddev7": [40358.83779217919, 33869.058528119465, 27379.279264059733, 20889.5, 14399.72073594027, 7909.941471880538, 1420.1622078208093],\n                "stddev8": [53338.396320298656, 40358.83779217919, 27379.279264059733, 14399.72073594027, 1420.1622078208093, -11559.396320298656],\n                "quantile5": [30081.5, 23624.5, 18944.5, 14903],\n                "quantile7": [32962, 26861, 22886, 19467, 16541, 12914],\n                "quantile9": [34926, 28956, 25270, 22474, 19707, 17546, 15205, 11592],\n                "quantile11": [37085, 31171, 27079, 24532, 22288, 19935, 18307, 16385, 14407, 10754],\n                "min": 0,\n                "max": 122922,\n                "mean": 23033.011,\n                "median": 20889.5,\n                "stddev": 12979.558528119462,\n                "sample": []\n            }\n        },\n        "myb": {\n            "county": {\n                "ckmeans5": [1987, 1979, 1970, 1960],\n                "ckmeans7": [1952, 1961, 1969, 1976, 1982, 1989],\n                "ckmeans9": [1991, 1986, 1982, 1978, 1974, 1968, 1961, 1952],\n                "stddev7": [1993.9370041099323, 1988.6246694066215, 1983.3123347033109, 1978, 1972.6876652966891, 1967.3753305933785, 1962.0629958900677],\n                "stddev8": [2004.561673516554, 1993.9370041099323, 1983.3123347033109, 1972.6876652966891, 1962.0629958900677, 1951.438326483446],\n                "quantile5": [1986, 1980, 1976, 1969],\n                "quantile7": [1987, 1983, 1980, 1977, 1973, 1964],\n                "quantile9": [1989, 1985, 1982, 1979, 1977, 1974, 1971, 1962],\n                "quantile11": [1990, 1986, 1984, 1981, 1979, 1977, 1975, 1973, 1968, 1961],\n                "min": 1939,\n                "max": 2002,\n                "mean": 1976.98,\n                "median": 1978,\n                "stddev": 10.62466940662157,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [1985, 1980, 1972, 1964],\n                "ckmeans7": [1956, 1964, 1970, 1975, 1980, 1985],\n                "ckmeans9": [1989, 1984, 1980, 1977, 1974, 1970, 1964, 1956],\n                "stddev7": [1988.9345008743987, 1984.6230005829325, 1980.3115002914662, 1976, 1971.6884997085338, 1967.3769994170675, 1963.0654991256013],\n                "stddev8": [1997.5575014573312, 1988.9345008743987, 1980.3115002914662, 1971.6884997085338, 1963.0654991256013, 1954.4424985426688],\n                "quantile5": [1982, 1978, 1975, 1969],\n                "quantile7": [1984, 1981, 1978, 1975, 1972, 1966],\n                "quantile9": [1985, 1982, 1980, 1977, 1975, 1973, 1970, 1964],\n                "quantile11": [1986, 1983, 1981, 1980, 1977, 1975, 1974, 1972, 1967, 1961],\n                "min": 1951,\n                "max": 1993,\n                "mean": 1975.4038461538462,\n                "median": 1976,\n                "stddev": 8.623000582932514,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [1991, 1977, 1961, 1939],\n                "ckmeans7": [1939, 1951, 1965, 1976, 1986, 1996],\n                "ckmeans9": [1998, 1990, 1984, 1978, 1971, 1962, 1950, 1939],\n                "stddev7": [2590.605498728276, 2387.4036658188506, 2184.2018329094253, 1981, 1777.7981670905747, 1574.5963341811491, 1371.3945012717238],\n                "stddev8": [2997.009164547127, 2590.605498728276, 2184.2018329094253, 1777.7981670905747, 1371.3945012717238, 964.990835452873],\n                "quantile5": [1992.5, 1985, 1978, 1965],\n                "quantile7": [1995, 1989, 1984, 1979, 1972, 1958],\n                "quantile9": [1999, 1992, 1987, 1983, 1979, 1975, 1967, 1955],\n                "quantile11": [2000, 1993, 1989, 1986, 1983, 1980, 1977, 1971, 1963, 1952],\n                "min": 0,\n                "max": 2006,\n                "mean": 1893.097,\n                "median": 1981,\n                "stddev": 406.4036658188508,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [1986, 1971, 1954, 1939],\n                "ckmeans7": [1939, 1949, 1961, 1972, 1981, 1990],\n                "ckmeans9": [1995, 1987, 1980, 1972, 1963, 1954, 1945, 1939],\n                "stddev7": [2288.9853730033083, 2185.6569153355385, 2082.3284576677693, 1979, 1875.6715423322307, 1772.3430846644612, 1669.014626996692],\n                "stddev8": [2495.642288338847, 2288.9853730033083, 2082.3284576677693, 1875.6715423322307, 1669.014626996692, 1462.3577116611532],\n                "quantile5": [1988, 1983, 1976, 1962],\n                "quantile7": [1991, 1986, 1982, 1977, 1968, 1957],\n                "quantile9": [1992, 1988, 1984, 1981, 1977, 1973, 1964, 1954],\n                "quantile11": [1993, 1989, 1986, 1983, 1981, 1978, 1974, 1968, 1960, 1952],\n                "min": 0,\n                "max": 2004,\n                "mean": 1954.312,\n                "median": 1979,\n                "stddev": 206.65691533553868,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [1986, 1972, 1954, 1939],\n                "ckmeans7": [1939, 1951, 1966, 1977, 1985, 1993],\n                "ckmeans9": [1997, 1989, 1982, 1976, 1969, 1961, 1949, 1939],\n                "stddev7": [2476.9930672047553, 2310.9953781365034, 2144.997689068252, 1979, 1813.0023109317483, 1647.0046218634966, 1481.0069327952447],\n                "stddev8": [2808.9884453412587, 2476.9930672047553, 2144.997689068252, 1813.0023109317483, 1481.0069327952447, 1149.0115546587413],\n                "quantile5": [1987, 1982, 1976, 1964],\n                "quantile7": [1990, 1985, 1981, 1977, 1971, 1958],\n                "quantile9": [1991, 1987, 1983, 1981, 1978, 1973, 1966, 1955],\n                "quantile11": [1993, 1988, 1985, 1983, 1980, 1978, 1974, 1970, 1962, 1949],\n                "min": 0,\n                "max": 2004,\n                "mean": 1919.336,\n                "median": 1979,\n                "stddev": 331.99537813650346,\n                "sample": []\n            }\n        },\n        "pop": {\n            "bg": {\n                "ckmeans5": [5920, 3045, 1901, 1106],\n                "ckmeans7": [926, 1503, 2204, 3045, 4401, 8552],\n                "ckmeans9": [8552, 5328, 3816, 2971, 2280, 1675, 1168, 748],\n                "stddev7": [2686.790506547409, 2200.860337698273, 1714.9301688491364, 1229, 743.0698311508636, 257.1396623017272, -228.79050654740922],\n                "stddev8": [3658.650844245682, 2686.790506547409, 1714.9301688491364, 743.0698311508636, -228.79050654740922, -1200.650844245682],\n                "quantile5": [2125.5, 1423, 1054, 793.5],\n                "quantile7": [2447, 1788, 1348, 1100, 900, 714],\n                "quantile9": [2632, 2022, 1618, 1310, 1129, 971, 814, 662],\n                "quantile11": [2739, 2213, 1859, 1524, 1286, 1145, 1009, 884, 768, 624],\n                "min": 0,\n                "max": 8886,\n                "mean": 1495.753,\n                "median": 1229,\n                "stddev": 971.8603376982728,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [9974203, 3086331, 1279668, 360990],\n                "ckmeans7": [177026, 596684, 1359074, 2600861, 5227827, 9974203],\n                "ckmeans9": [9974203, 5227827, 3086331, 1815269, 1200241, 682108, 360990, 115954],\n                "stddev7": [727282.3524879827, 494249.06832532183, 261215.78416266092, 28182.5, -204850.78416266092, -437884.06832532183, -670917.3524879827],\n                "stddev8": [1193348.9208133046, 727282.3524879827, 261215.78416266092, -204850.78416266092, -670917.3524879827, -1136983.9208133046],\n                "quantile5": [119712.5, 39534.5, 20341, 10681.5],\n                "quantile7": [194868, 70118, 36413, 22041, 14478, 8297],\n                "quantile9": [256802, 106622, 52782, 34280, 22800, 16627, 11675, 6857],\n                "quantile11": [307888, 140918, 74918, 45987, 33216, 23955, 18014, 13938, 9662, 5906],\n                "min": 73,\n                "max": 9974203,\n                "mean": 136092.338,\n                "median": 28182.5,\n                "stddev": 466066.56832532183,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [38066920, 19361792, 8185131, 3592053],\n                "ckmeans7": [2761584, 5197580, 8874374, 19361792, 26092033, 38066920],\n                "ckmeans9": [38066920, 26092033, 19361792, 11560380, 8185131, 5724692, 4383272, 2761584],\n                "stddev7": [14423549.584494209, 10996302.222996138, 7569054.861498069, 4141807.5, 714560.1385019305, -2712687.222996139, -6139934.584494209],\n                "stddev8": [21278044.30749035, 14423549.584494209, 7569054.861498069, 714560.1385019305, -6139934.584494209, -12994429.307490349],\n                "quantile5": [8874374, 5383661, 2984345, 1328535],\n                "quantile7": [9907756, 6561516, 4817678, 3592053, 1855617, 1006370],\n                "quantile9": [12758729, 8185131, 6028076, 4727273, 3638965, 2858111, 1392704, 834708],\n                "quantile11": [12868747, 9750405, 6561516, 5887776, 4727273, 3638965, 2882946, 1855617, 1321069, 728300],\n                "min": 575251,\n                "max": 38066920,\n                "mean": 6110500.942307692,\n                "median": 4141807.5,\n                "stddev": 6854494.722996139,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [6638, 5008, 3687, 2438],\n                "ckmeans7": [1850, 2773, 3728, 4725, 5870, 7544],\n                "ckmeans9": [7701, 6229, 5246, 4462, 3728, 3020, 2323, 1466],\n                "stddev7": [6073.00717916289, 5244.004786108593, 4415.002393054297, 3586, 2756.9976069457034, 1927.9952138914068, 1098.9928208371102],\n                "stddev8": [7731.011965271483, 6073.00717916289, 4415.002393054297, 2756.9976069457034, 1098.9928208371102, -559.011965271483],\n                "quantile5": [5189, 4107, 3191, 2400],\n                "quantile7": [5618, 4637, 3956, 3279, 2793, 2139],\n                "quantile9": [5929, 5023, 4376, 3870, 3368, 2941, 2514, 1990],\n                "quantile11": [6200, 5300, 4705, 4273, 3830, 3399, 3074, 2712, 2296, 1872],\n                "min": 0,\n                "max": 11771,\n                "mean": 3836.329,\n                "median": 3586,\n                "stddev": 1658.0047861085932,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [1490758, 211655, 81025, 18898],\n                "ckmeans7": [7348, 27339, 81025, 211655, 298178, 1490758],\n                "ckmeans9": [1490758, 298178, 211655, 124250, 81025, 39059, 18898, 5671],\n                "stddev7": [74819.68602186807, 50084.457347912044, 25349.228673956022, 614, -24121.228673956022, -48856.457347912044, -73591.68602186807],\n                "stddev8": [124290.14336978011, 74819.68602186807, 25349.228673956022, -24121.228673956022, -73591.68602186807, -123062.14336978011],\n                "quantile5": [3777, 1049, 408, 131],\n                "quantile7": [6364, 2286, 932, 457, 214, 84],\n                "quantile9": [8728, 3273, 1614, 872, 488, 288, 150, 63],\n                "quantile11": [11342, 4166, 2488, 1356, 817, 514, 345, 208, 115, 51],\n                "min": 0,\n                "max": 1490758,\n                "mean": 5949.696,\n                "median": 614,\n                "stddev": 49470.457347912044,\n                "sample": []\n            }\n        }\n    },\n    "acs1115": {\n        "mhi": {\n            "county": {\n                "ckmeans5": [76101, 59392, 47468, 38159],\n                "ckmeans7": [34974, 42168, 49179, 57993, 68838, 83700],\n                "ckmeans9": [89860, 75619, 63628, 55247, 48817, 43073, 37321, 30468],\n                "stddev7": [63840.39200250614, 57393.09466833743, 50945.79733416872, 44498.5, 38051.20266583128, 31603.905331662572, 25156.60799749386],\n                "stddev8": [76734.98667084357, 63840.39200250614, 50945.79733416872, 38051.20266583128, 25156.60799749386, 12262.01332915643],\n                "quantile5": [54191, 47318, 42223, 36654],\n                "quantile7": [58228, 51092, 46495, 42905, 39285, 35000],\n                "quantile9": [62372, 53379, 49227, 45965, 43355, 40561, 37653, 33965],\n                "quantile11": [65670, 55432, 51387, 48225, 45751, 43586, 41268, 38955, 36289, 32819],\n                "min": 19501,\n                "max": 110238,\n                "mean": 46888.278,\n                "median": 44498.5,\n                "stddev": 12894.594668337428,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [66779, 56852, 49255, 39665],\n                "ckmeans7": [39665, 46868, 50957, 56852, 65015, 69515],\n                "ckmeans9": [69515, 65015, 58840, 55176, 50957, 46868, 43623, 39665],\n                "stddev7": [67906.3385694381, 62804.559046292066, 57702.77952314603, 52601, 47499.22047685397, 42397.440953707934, 37295.66143056191],\n                "stddev8": [78109.89761573015, 67906.3385694381, 57702.77952314603, 47499.22047685397, 37295.66143056191, 27092.10238426984],\n                "quantile5": [61492, 55176, 49620, 46868],\n                "quantile7": [66779, 60509, 53357, 50957, 47583, 45047],\n                "quantile9": [69515, 61062, 57574, 53207, 51243, 49331, 46879, 43740],\n                "quantile11": [70331, 61818, 60509, 57181, 53207, 51243, 49429, 47583, 45483, 43623],\n                "min": 19350,\n                "max": 74551,\n                "mean": 53957.519230769234,\n                "median": 52601,\n                "stddev": 10203.559046292063,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [175048, 110208, 73784, 45809],\n                "ckmeans7": [31250, 49338, 67596, 90500, 123456, 185641],\n                "ckmeans9": [185641, 132344, 103273, 83900, 67773, 53690, 39375, 19271],\n                "stddev7": [109577.70305538282, 92126.30203692187, 74674.90101846094, 57223.5, 39772.098981539064, 22320.69796307812, 4869.296944617177],\n                "stddev8": [144480.5050923047, 109577.70305538282, 74674.90101846094, 39772.098981539064, 4869.296944617177, -30033.505092304695],\n                "quantile5": [86180.5, 64382, 51255.5, 38977.5],\n                "quantile7": [96058, 75625, 62209, 52727, 44783, 35326],\n                "quantile9": [102455, 82750, 70238, 61469, 53407, 47500, 40750, 32366],\n                "quantile11": [107266, 89097, 76902, 67888, 60571, 54224, 48983, 43990, 37877, 30023],\n                "min": 0,\n                "max": 250001,\n                "mean": 64728.771,\n                "median": 57223.5,\n                "stddev": 34902.80203692188,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [154018, 77127, 49286, 19792],\n                "ckmeans7": [14177, 34583, 49442, 67164, 91779, 169375],\n                "ckmeans9": [207500, 119423, 92462, 75417, 60887, 47065, 34000, 14177],\n                "stddev7": [90750.2871396358, 76140.02475975719, 61529.76237987859, 46919.5, 32309.237620121403, 17698.975240242806, 3088.712860364205],\n                "stddev8": [119970.81189939298, 90750.2871396358, 61529.76237987859, 32309.237620121403, 3088.712860364205, -26131.811899392982],\n                "quantile5": [70948.5, 53750, 41250, 30854],\n                "quantile7": [78500, 62969, 51591, 42344, 36250, 24792],\n                "quantile9": [82250, 68929, 58594, 50614, 43250, 38750, 32083, 20000],\n                "quantile11": [85384, 72692, 63691, 56071, 50000, 43750, 40000, 35659, 29063, 0],\n                "min": 0,\n                "max": 250001,\n                "mean": 49904.696,\n                "median": 46919.5,\n                "stddev": 29220.524759757194,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [62013, 45325, 32738, 17153],\n                "ckmeans7": [11436, 25993, 35720, 45325, 56573, 73092],\n                "ckmeans9": [76042, 61544, 52532, 45000, 37548, 30541, 22850, 11436],\n                "stddev7": [62712.14721896483, 54849.43147930989, 46986.715739654945, 39124, 31261.284260345055, 23398.568520690114, 15535.852781035173],\n                "stddev8": [78437.57869827471, 62712.14721896483, 46986.715739654945, 31261.284260345055, 15535.852781035173, -189.57869827471586],\n                "quantile5": [51453.5, 42502, 35500, 27291.5],\n                "quantile7": [54875, 47850, 41276, 36534, 31351, 24458],\n                "quantile9": [57039, 50714, 45524, 41029, 36887, 32853, 28854, 22333],\n                "quantile11": [59333, 52045, 48279, 43917, 40714, 37353, 34167, 31029, 26654, 20588],\n                "min": 0,\n                "max": 97917,\n                "mean": 39621.727,\n                "median": 39124,\n                "stddev": 15725.431479309886,\n                "sample": []\n            }\n        },\n        "mhv": {\n            "county": {\n                "ckmeans5": [543100, 319200, 192800, 116900],\n                "ckmeans7": [101400, 146700, 208200, 295000, 416000, 620700],\n                "ckmeans9": [698600, 509700, 416000, 308400, 233400, 177700, 134200, 96300],\n                "stddev7": [250863.60695476955, 204975.73796984635, 159087.86898492317, 113200, 67312.13101507683, 21424.262030153637, -24463.60695476955],\n                "stddev8": [342639.3449246159, 250863.60695476955, 159087.86898492317, 67312.13101507683, -24463.60695476955, -116239.3449246159],\n                "quantile5": [175450, 126750, 99400, 81750],\n                "quantile7": [203300, 152400, 122700, 102700, 87300, 76300],\n                "quantile9": [228500, 167700, 140300, 121200, 105500, 92600, 83300, 72700],\n                "quantile11": [246600, 185900, 155700, 133800, 119800, 107300, 95400, 86200, 80700, 69400],\n                "min": 0,\n                "max": 815100,\n                "mean": 140324.7,\n                "median": 113200,\n                "stddev": 91775.73796984636,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [475800, 315900, 215900, 153800],\n                "ckmeans7": [153800, 215900, 259500, 315900, 385500, 475800],\n                "ckmeans9": [475800, 385500, 315900, 270500, 231500, 186200, 153800, 129200],\n                "stddev7": [296858.94711092615, 253205.96474061743, 209552.98237030872, 165900, 122247.01762969128, 78594.03525938255, 34941.05288907382],\n                "stddev8": [384164.9118515436, 296858.94711092615, 209552.98237030872, 122247.01762969128, 34941.05288907382, -52364.91185154361],\n                "quantile5": [247800, 186200, 153800, 129900],\n                "quantile7": [270500, 237300, 173800, 159000, 138400, 124200],\n                "quantile9": [286900, 245000, 215900, 173700, 160300, 142100, 132000, 122400],\n                "quantile11": [315900, 250000, 237300, 194800, 173700, 160300, 144100, 138400, 129200, 120500],\n                "min": 103100,\n                "max": 515300,\n                "mean": 196107.6923076923,\n                "median": 165900,\n                "stddev": 87305.96474061745,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [1293800, 646600, 360600, 181800],\n                "ckmeans7": [139200, 264000, 418500, 656900, 1036400, 1573500],\n                "ckmeans9": [1724600, 1208300, 757800, 544600, 385300, 280800, 198400, 111800],\n                "stddev7": [593999.8880869956, 469666.5920579971, 345333.29602899856, 221000, 96666.70397100145, -27666.5920579971, -151999.88808699563],\n                "stddev8": [842666.4801449927, 593999.8880869956, 345333.29602899856, 96666.70397100145, -151999.88808699563, -400666.4801449927],\n                "quantile5": [363050, 249600, 193800, 131300],\n                "quantile7": [446400, 298100, 237300, 200000, 164000, 103400],\n                "quantile9": [495800, 340300, 270800, 231600, 204100, 172300, 144400, 87400],\n                "quantile11": [578400, 386300, 307000, 259900, 229500, 206100, 182100, 159000, 123100, 80000],\n                "min": 0,\n                "max": 2000001,\n                "mean": 280503.204,\n                "median": 221000,\n                "stddev": 248666.5920579971,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [1400900, 731000, 355500, 142800],\n                "ckmeans7": [56000, 157300, 306300, 505200, 792400, 1400900],\n                "ckmeans9": [1602300, 1106500, 731000, 505200, 338600, 212500, 130100, 49400],\n                "stddev7": [464343.3253366459, 356428.8835577639, 248514.44177888194, 140600, 32685.558221118044, -75228.88355776391, -183143.32533664588],\n                "stddev8": [680172.2088944098, 464343.3253366459, 248514.44177888194, 32685.558221118044, -183143.32533664588, -398972.2088944098],\n                "quantile5": [270650, 172900, 108300, 65250],\n                "quantile7": [355500, 222500, 165700, 115600, 83900, 40800],\n                "quantile9": [414400, 252600, 200700, 162500, 119400, 92900, 70900, 0],\n                "quantile11": [463200, 290500, 225000, 186900, 160200, 120500, 100000, 81600, 59400, 0],\n                "min": 0,\n                "max": 2000001,\n                "mean": 196868.698,\n                "median": 140600,\n                "stddev": 215828.8835577639,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [239200, 141500, 93600, 42800],\n                "ckmeans7": [32000, 72900, 103200, 140100, 197800, 310300],\n                "ckmeans9": [368100, 247600, 185700, 143800, 115900, 91800, 67200, 28900],\n                "stddev7": [177063.42579047626, 150208.95052698418, 123354.47526349209, 96500, 69645.52473650791, 42791.04947301582, 15936.574209523722],\n                "stddev8": [230772.37631746047, 177063.42579047626, 123354.47526349209, 69645.52473650791, 15936.574209523722, -37772.37631746047],\n                "quantile5": [141900, 108900, 85950, 67250],\n                "quantile7": [153700, 122700, 104500, 88600, 76600, 59400],\n                "quantile9": [161200, 135300, 117300, 102500, 90000, 80300, 69500, 55500],\n                "quantile11": [168400, 146400, 125500, 113200, 101100, 90700, 82400, 75600, 64300, 48800],\n                "min": 0,\n                "max": 452900,\n                "mean": 104142.7,\n                "median": 96500,\n                "stddev": 53708.95052698418,\n                "sample": []\n            }\n        },\n        "mfi": {\n            "state": {\n                "ckmeans5": [80778, 68817, 60809, 49274],\n                "ckmeans7": [49274, 59410, 65237, 70720, 77055, 84232],\n                "ckmeans9": [87085, 81726, 77055, 70720, 65237, 59410, 55049, 49274],\n                "stddev7": [83985.3261082081, 77927.88407213874, 71870.44203606938, 65813, 59755.55796393063, 53698.11592786126, 47640.67389179189],\n                "stddev8": [96100.21018034685, 83985.3261082081, 71870.44203606938, 59755.55796393063, 47640.67389179189, 35525.78981965315],\n                "quantile5": [74826, 68817, 62247, 57504],\n                "quantile7": [80778, 73194, 68064, 62717, 59410, 56110],\n                "quantile9": [84232, 74708, 71546, 67466, 62817, 60916, 57573, 55341],\n                "quantile11": [85321, 77055, 73194, 70720, 67466, 62817, 61119, 59410, 57144, 55049],\n                "min": 22976,\n                "max": 90089,\n                "mean": 66550.73076923077,\n                "median": 65813,\n                "stddev": 12114.884072138739,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [91077, 72000, 58116, 47636],\n                "ckmeans7": [44257, 52120, 59659, 68485, 80067, 94850],\n                "ckmeans9": [108637, 91077, 78500, 68485, 60544, 53880, 47237, 40055],\n                "stddev7": [77545.53998956928, 70302.69332637952, 63059.84666318976, 55817, 48574.15333681024, 41331.306673620486, 34088.460010430725],\n                "stddev8": [92031.23331594879, 77545.53998956928, 63059.84666318976, 48574.15333681024, 34088.460010430725, 19602.76668405121],\n                "quantile5": [66222, 58567.5, 52448, 46158.5],\n                "quantile7": [70498, 62441, 57574, 53348, 48929, 44079],\n                "quantile9": [75179, 65239, 60900, 57046, 54095, 50407, 46938, 42668],\n                "quantile11": [78500, 67188, 63125, 59926, 56838, 54478, 51345, 48706, 45597, 41909],\n                "min": 27021,\n                "max": 128504,\n                "mean": 57762.078,\n                "median": 55817,\n                "stddev": 14485.693326379516,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [171083, 108618, 72904, 45063],\n                "ckmeans7": [37450, 60938, 83750, 110868, 153523, 211974],\n                "ckmeans9": [222569, 171083, 130574, 103426, 82652, 63913, 45313, 20859],\n                "stddev7": [134968.76107967907, 112414.84071978607, 89860.92035989303, 67307, 44753.07964010697, 22199.159280213942, -354.7610796790832],\n                "stddev8": [180076.60179946513, 134968.76107967907, 89860.92035989303, 44753.07964010697, -354.7610796790832, -45462.60179946515],\n                "quantile5": [99629.5, 76035.5, 59337.5, 45554.5],\n                "quantile7": [114688, 88672, 73515, 61333, 51985, 40449],\n                "quantile9": [123800, 95820, 81750, 71667, 62679, 55110, 47642, 36875],\n                "quantile11": [137857, 103500, 90107, 79013, 71250, 63417, 57128, 51026, 44019, 34353],\n                "min": 0,\n                "max": 250001,\n                "mean": 77450.847,\n                "median": 67307,\n                "stddev": 45107.84071978606,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [208125, 90482, 58578, 24028],\n                "ckmeans7": [18819, 46563, 66737, 90139, 121250, 208125],\n                "ckmeans9": [208125, 124693, 97328, 79076, 63438, 49821, 36964, 17143],\n                "stddev7": [107073.14058120656, 89969.59372080438, 72866.04686040219, 55762.5, 38658.95313959781, 21555.406279195624, 4451.859418793436],\n                "stddev8": [141280.23430201094, 107073.14058120656, 72866.04686040219, 38658.95313959781, 4451.859418793436, -29755.23430201094],\n                "quantile5": [83535.5, 63009, 50220, 34705],\n                "quantile7": [91083, 73036, 60909, 51667, 42093, 25625],\n                "quantile9": [98393, 80263, 68875, 59667, 52261, 45625, 37031, 0],\n                "quantile11": [101675, 85273, 73750, 65833, 59219, 53051, 47647, 41250, 32727, 0],\n                "min": 0,\n                "max": 250001,\n                "mean": 57615.39,\n                "median": 55762.5,\n                "stddev": 34207.093720804376,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [13, 10, 7, 4],\n                "ckmeans7": [3, 5, 7, 9, 11, 13],\n                "ckmeans9": [14, 13, 12, 11, 9, 7, 5, 3],\n                "stddev7": [13.546693311223912, 11.531128874149275, 9.515564437074637, 7.5, 5.484435562925363, 3.4688711258507254, 1.4533066887760882],\n                "stddev8": [17.577822185373186, 13.546693311223912, 9.515564437074637, 5.484435562925363, 1.4533066887760882, -2.5778221853731864],\n                "quantile5": [12, 9, 6, 3],\n                "quantile7": [13, 11, 9, 6, 4, 3],\n                "quantile9": [13, 11, 10, 8, 7, 5, 4, 2],\n                "quantile11": [13, 12, 11, 9, 8, 7, 6, 4, 3, 2],\n                "min": 1,\n                "max": 0,\n                "mean": 7.5,\n                "median": 7.5,\n                "stddev": 4.031128874149275,\n                "sample": []\n            }\n        },\n        "pci": {\n            "state": {\n                "ckmeans5": [47675, 34152, 29291, 21057],\n                "ckmeans7": [21057, 25737, 29291, 31762, 36582, 47675],\n                "ckmeans9": [47675, 36582, 33236, 31118, 29291, 26381, 24604, 21057],\n                "stddev7": [35686.102263118984, 33013.901508745985, 30341.700754372992, 27669.5, 24997.299245627008, 22325.09849125401, 19652.89773688102],\n                "stddev8": [41030.50377186497, 35686.102263118984, 30341.700754372992, 24997.299245627008, 19652.89773688102, 14308.49622813503],\n                "quantile5": [32157, 29291, 26607, 24981],\n                "quantile7": [33413, 30554, 27950, 26829, 25737, 24091],\n                "quantile9": [34362, 32035, 29894, 27882, 26953, 26259, 25032, 24012],\n                "quantile11": [36582, 32217, 30554, 29822, 27882, 26953, 26381, 25737, 24686, 23450],\n                "min": 11394,\n                "max": 47675,\n                "mean": 28531.884615384617,\n                "median": 27669.5,\n                "stddev": 5344.4015087459875,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [43880, 32021, 25348, 20439],\n                "ckmeans7": [18533, 22093, 25389, 29362, 34742, 45500],\n                "ckmeans9": [45500, 36809, 32271, 28460, 25303, 22421, 19660, 16242],\n                "stddev7": [32275.865111800013, 29205.91007453334, 26135.95503726667, 23066, 19996.04496273333, 16926.08992546666, 13856.134888199986],\n                "stddev8": [38415.775186333354, 32275.865111800013, 26135.95503726667, 19996.04496273333, 13856.134888199986, 7716.224813666644],\n                "quantile5": [27813, 24264, 21767.5, 19507],\n                "quantile7": [29821, 26005, 23981, 22134, 20534, 18619],\n                "quantile9": [31056, 27317, 25176, 23718, 22368, 21101, 19726, 18082],\n                "quantile11": [32724, 28209, 26227, 24669, 23630, 22547, 21385, 20353, 19194, 17746],\n                "min": 8292,\n                "max": 60236,\n                "mean": 24105.762,\n                "median": 23066,\n                "stddev": 6139.910074533343,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [115128, 67807, 40799, 24707],\n                "ckmeans7": [17605, 27491, 38637, 55283, 79766, 115128],\n                "ckmeans9": [125359, 87803, 67807, 51870, 40058, 31536, 23919, 15411],\n                "stddev7": [60217.93346599988, 49695.955643999914, 39173.97782199996, 28652, 18130.022178000043, 7608.044356000082, -2913.9334659998785],\n                "stddev8": [81261.88910999979, 60217.93346599988, 39173.97782199996, 18130.022178000043, -2913.9334659998785, -23957.889109999793],\n                "quantile5": [42694, 31745, 25400.5, 19614],\n                "quantile7": [48700, 36586, 30651, 26219, 21972, 17777],\n                "quantile9": [55848, 40973, 34567, 30089, 26780, 23278, 20359, 16309],\n                "quantile11": [61679, 44326, 37394, 33367, 29855, 27166, 24355, 21606, 18841, 15089],\n                "min": 0,\n                "max": 184442,\n                "mean": 33643.558,\n                "median": 28652,\n                "stddev": 21043.955643999918,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [66415, 37603, 24656, 13610],\n                "ckmeans7": [9012, 19240, 28172, 39979, 60827, 96767],\n                "ckmeans9": [96767, 60827, 42350, 32846, 25929, 19978, 14055, 5939],\n                "stddev7": [45195.2502946707, 37795.50019644713, 30395.750098223565, 22996, 15596.249901776433, 8196.499803552866, 796.7497053292973],\n                "stddev8": [59994.75049111783, 45195.2502946707, 30395.750098223565, 15596.249901776433, 796.7497053292973, -14002.750491117833],\n                "quantile5": [33184.5, 25612, 20836.5, 15613],\n                "quantile7": [37603, 29771, 24917, 21292, 18159, 13464],\n                "quantile9": [40284, 31900, 27386, 24454, 21635, 19199, 16250, 11782],\n                "quantile11": [43612, 34594, 30387, 26579, 24094, 21920, 20004, 17635, 15045, 10899],\n                "min": 0,\n                "max": 151037,\n                "mean": 25404.731,\n                "median": 22996,\n                "stddev": 14799.500196447134,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [35610, 26108, 20159, 14255],\n                "ckmeans7": [12620, 17406, 21174, 25491, 31344, 41507],\n                "ckmeans9": [45753, 35610, 29115, 24545, 20773, 17362, 13241, 6111],\n                "stddev7": [30760.92958745656, 27277.286391637706, 23793.643195818855, 20310, 16826.356804181145, 13342.713608362294, 9859.070412543439],\n                "stddev8": [37728.21597909427, 30760.92958745656, 23793.643195818855, 16826.356804181145, 9859.070412543439, 2891.784020905732],\n                "quantile5": [25782.5, 21857.5, 18846.5, 15980.5],\n                "quantile7": [27802, 23698, 21461, 19273, 17272, 14926],\n                "quantile9": [28759, 25070, 22829, 21151, 19540, 18045, 16247, 13834],\n                "quantile11": [30054, 26343, 23900, 22398, 21027, 19684, 18362, 17082, 15688, 12932],\n                "min": 0,\n                "max": 56743,\n                "mean": 21082.97,\n                "median": 20310,\n                "stddev": 6967.286391637707,\n                "sample": []\n            }\n        },\n        "myb": {\n            "county": {\n                "ckmeans5": [1986, 1977, 1965, 1939],\n                "ckmeans7": [1939, 1958, 1968, 1976, 1982, 1989],\n                "ckmeans9": [1990, 1984, 1979, 1974, 1968, 1961, 1953, 1939],\n                "stddev7": [2073.279558110594, 2041.5197054070625, 2009.7598527035314, 1978, 1946.2401472964686, 1914.4802945929375, 1882.7204418894062],\n                "stddev8": [2136.7992635176565, 2073.279558110594, 2009.7598527035314, 1946.2401472964686, 1882.7204418894062, 1819.2007364823437],\n                "quantile5": [1986, 1980, 1975, 1966],\n                "quantile7": [1988, 1983, 1980, 1976, 1972, 1962],\n                "quantile9": [1989, 1985, 1982, 1979, 1977, 1973, 1968, 1959],\n                "quantile11": [1991, 1986, 1984, 1981, 1979, 1977, 1974, 1971, 1965, 1958],\n                "min": 0,\n                "max": 2002,\n                "mean": 1974.205,\n                "median": 1978,\n                "stddev": 63.51970540706254,\n                "sample": []\n            },\n            "state": {\n                "ckmeans5": [1984, 1978, 1971, 1964],\n                "ckmeans7": [1956, 1964, 1971, 1975, 1980, 1986],\n                "ckmeans9": [1988, 1984, 1980, 1977, 1974, 1971, 1964, 1956],\n                "stddev7": [1989.4966569438443, 1985.164437962563, 1980.8322189812814, 1976.5, 1972.1677810187186, 1967.835562037437, 1963.5033430561557],\n                "stddev8": [1998.1610949064072, 1989.4966569438443, 1980.8322189812814, 1972.1677810187186, 1963.5033430561557, 1954.8389050935928],\n                "quantile5": [1983, 1978, 1975, 1969],\n                "quantile7": [1984, 1982, 1978, 1975, 1972, 1967],\n                "quantile9": [1985, 1982, 1980, 1978, 1976, 1973, 1971, 1964],\n                "quantile11": [1986, 1983, 1982, 1980, 1978, 1976, 1974, 1972, 1967, 1961],\n                "min": 1951,\n                "max": 1993,\n                "mean": 1975.6538461538462,\n                "median": 1976.5,\n                "stddev": 8.664437962562863,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [1989, 1971, 1952, 1939],\n                "ckmeans7": [1939, 1949, 1962, 1973, 1984, 1995],\n                "ckmeans9": [1998, 1990, 1982, 1973, 1964, 1955, 1946, 1939],\n                "stddev7": [2449.5257939432445, 2292.1838626288295, 2134.841931314415, 1977.5, 1820.1580686855852, 1662.8161373711705, 1505.4742060567555],\n                "stddev8": [2764.209656572074, 2449.5257939432445, 2134.841931314415, 1820.1580686855852, 1505.4742060567555, 1190.790343427926],\n                "quantile5": [1990, 1981.5, 1970, 1955],\n                "quantile7": [1993, 1986, 1980, 1973, 1961, 1948],\n                "quantile9": [1995, 1989, 1984, 1980, 1974, 1965, 1956, 1942],\n                "quantile11": [1997, 1991, 1987, 1983, 1979, 1975, 1967, 1960, 1953, 1939],\n                "min": 0,\n                "max": 2006,\n                "mean": 1922.801,\n                "median": 1977.5,\n                "stddev": 314.68386262882956,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [1986, 1972, 1954, 1939],\n                "ckmeans7": [1939, 1949, 1962, 1973, 1982, 1991],\n                "ckmeans9": [1996, 1988, 1982, 1975, 1967, 1958, 1947, 1939],\n                "stddev7": [2467.88915215169, 2304.759434767793, 2141.6297173838966, 1978.5, 1815.3702826161034, 1652.2405652322068, 1489.1108478483102],\n                "stddev8": [2794.148586919483, 2467.88915215169, 2141.6297173838966, 1815.3702826161034, 1489.1108478483102, 1162.851413080517],\n                "quantile5": [1988, 1982, 1975, 1959],\n                "quantile7": [1990, 1985, 1981, 1976, 1968, 1955],\n                "quantile9": [1992, 1987, 1984, 1980, 1977, 1971, 1963, 1950],\n                "quantile11": [1993, 1988, 1985, 1983, 1980, 1977, 1973, 1967, 1958, 1945],\n                "min": 0,\n                "max": 2005,\n                "mean": 1920.185,\n                "median": 1978.5,\n                "stddev": 326.25943476779327,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [1988, 1978, 1964, 1939],\n                "ckmeans7": [1939, 1955, 1967, 1976, 1983, 1991],\n                "ckmeans9": [1996, 1989, 1983, 1977, 1970, 1962, 1952, 1939],\n                "stddev7": [2169.251456434603, 2106.500970956402, 2043.750485478201, 1981, 1918.249514521799, 1855.4990290435978, 1792.7485435653969],\n                "stddev8": [2294.7524273910053, 2169.251456434603, 2043.750485478201, 1918.249514521799, 1792.7485435653969, 1667.2475726089947],\n                "quantile5": [1989, 1984, 1978, 1971],\n                "quantile7": [1991, 1987, 1983, 1979, 1975, 1966],\n                "quantile9": [1992, 1988, 1986, 1983, 1979, 1976, 1972, 1964],\n                "quantile11": [1993, 1990, 1987, 1985, 1982, 1980, 1977, 1974, 1970, 1961],\n                "min": 0,\n                "max": 2004,\n                "mean": 1971.483,\n                "median": 1981,\n                "stddev": 125.50097095640207,\n                "sample": []\n            }\n        },\n        "pop": {\n            "state": {\n                "ckmeans5": [38421464, 19645772, 8256630, 3583073],\n                "ckmeans7": [2798636, 5278906, 8904413, 19645772, 26538614, 38421464],\n                "ckmeans9": [38421464, 26538614, 19645772, 11575977, 8256630, 5742117, 4397353, 2798636],\n                "stddev7": [14556441.02890336, 11093725.019268908, 7631009.009634454, 4168293, 705576.9903655467, -2757139.0192689067, -6219855.02890336],\n                "stddev8": [21481873.048172265, 14556441.02890336, 7631009.009634454, 705576.9903655467, -6219855.02890336, -13145287.048172265],\n                "quantile5": [8904413, 5419171, 2988081, 1329100],\n                "quantile7": [10006693, 6641928, 4830620, 3583073, 1869365, 1014699],\n                "quantile9": [12779559, 8256630, 6045448, 4777576, 3593222, 2892987, 1406299, 843190],\n                "quantile11": [12873761, 9845333, 6641928, 5930538, 4777576, 3593222, 2903379, 1869365, 1324201, 733375],\n                "min": 579679,\n                "max": 38421464,\n                "mean": 6155732.576923077,\n                "median": 4168293,\n                "stddev": 6925432.019268907,\n                "sample": []\n            },\n            "county": {\n                "ckmeans5": [10038388, 3116069, 1302884, 363453],\n                "ckmeans7": [145046, 524886, 1229039, 2298032, 4018143, 10038388],\n                "ckmeans9": [10038388, 5236393, 3116069, 1843152, 1229039, 702898, 363453, 116648],\n                "stddev7": [732322.5805270158, 497084.05368467723, 261845.52684233862, 26607, -208631.52684233862, -443870.05368467723, -679108.5805270158],\n                "stddev8": [1202799.634211693, 732322.5805270158, 261845.52684233862, -208631.52684233862, -679108.5805270158, -1149585.634211693],\n                "quantile5": [115807.5, 37454.5, 18916, 9362.5],\n                "quantile7": [183753, 67081, 34332, 21110, 13502, 7315],\n                "quantile9": [248966, 101960, 49146, 32835, 22001, 15807, 10300, 5939],\n                "quantile11": [300870, 136520, 72124, 43382, 32358, 22648, 17002, 12936, 8769, 5245],\n                "min": 85,\n                "max": 10038388,\n                "mean": 133616.608,\n                "median": 26607,\n                "stddev": 470477.05368467723,\n                "sample": []\n            },\n            "tract": {\n                "ckmeans5": [8546, 5832, 4111, 2537],\n                "ckmeans7": [1820, 3040, 4182, 5390, 6830, 9183],\n                "ckmeans9": [10887, 8373, 6575, 5334, 4316, 3386, 2513, 1355],\n                "stddev7": [6965.391857715, 5976.094571809999, 4986.797285905, 3997.5, 3008.2027140950004, 2018.9054281900003, 1029.6081422850002],\n                "stddev8": [8943.986429524999, 6965.391857715, 4986.797285905, 3008.2027140950004, 1029.6081422850002, -948.986429524999],\n                "quantile5": [5655.5, 4556.5, 3503, 2568],\n                "quantile7": [6126, 5081, 4408, 3631, 2993, 2219],\n                "quantile9": [6471, 5447, 4872, 4332, 3708, 3204, 2701, 2060],\n                "quantile11": [6901, 5807, 5194, 4725, 4255, 3762, 3347, 2949, 2442, 1921],\n                "min": 0,\n                "max": 14528,\n                "mean": 4206.102,\n                "median": 3997.5,\n                "stddev": 1978.5945718099997,\n                "sample": []\n            },\n            "place": {\n                "ckmeans5": [647484, 299107, 83476, 19035],\n                "ckmeans7": [5082, 19035, 45380, 124795, 299107, 647484],\n                "ckmeans9": [647484, 299107, 200614, 124795, 71549, 38722, 17162, 4834],\n                "stddev7": [43125.25031717116, 29031.50021144744, 14937.75010572372, 844, -13249.75010572372, -27343.50021144744, -41437.25031717116],\n                "stddev8": [71312.7505286186, 43125.25031717116, 14937.75010572372, -13249.75010572372, -41437.25031717116, -69624.7505286186],\n                "quantile5": [4526.5, 1549.5, 522.5, 153],\n                "quantile7": [7320, 2630, 1251, 582, 258, 92],\n                "quantile9": [8943, 3888, 2085, 1141, 616, 372, 169, 66],\n                "quantile11": [11043, 5364, 2843, 1842, 1098, 661, 436, 238, 135, 51],\n                "min": 0,\n                "max": 647484,\n                "mean": 5864.843,\n                "median": 844,\n                "stddev": 28187.50021144744,\n                "sample": []\n            },\n            "bg": {\n                "ckmeans5": [5086, 2566, 1699, 1048],\n                "ckmeans7": [853, 1285, 1808, 2509, 3871, 7232],\n                "ckmeans9": [7232, 3871, 2724, 2129, 1699, 1329, 1009, 704],\n                "stddev7": [2342.9562129270353, 1960.804141951357, 1578.6520709756785, 1196.5, 814.3479290243215, 432.1958580486431, 50.04378707296473],\n                "stddev8": [3107.2603548783923, 2342.9562129270353, 1578.6520709756785, 814.3479290243215, 50.04378707296473, -714.2603548783923],\n                "quantile5": [1826, 1365.5, 1062, 794],\n                "quantile7": [2046, 1572, 1320, 1098, 909, 715],\n                "quantile9": [2207, 1747, 1481, 1293, 1117, 969, 824, 655],\n                "quantile11": [2292, 1912, 1604, 1427, 1276, 1134, 1018, 901, 766, 617],\n                "min": 0,\n                "max": 8167,\n                "mean": 1360.186,\n                "median": 1196.5,\n                "stddev": 764.3041419513569,\n                "sample": []\n            }\n        }\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.default = {\n\n    "acs1115": {\n        "title": "ACS 11-15",\n        "type": "ACS",\n        "sources": {\n            "state": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/state_carto_2015/{z}/{x}/{y}.pbf"]\n            },\n            "county": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/county_carto_2015/{z}/{x}/{y}.pbf"]\n            },\n            "tract": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/tract_carto_2015/{z}/{x}/{y}.pbf"]\n            },\n            "bg": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/bg_carto_2015/{z}/{x}/{y}.pbf"]\n            },\n            "place": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/place_carto_2015/{z}/{x}/{y}.pbf"]\n            }\n        }\n    },\n    "c2010": {\n        "title": "Census 2010",\n        "type": "Census",\n        "sources": {\n            "state": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/state_carto_c2010/{z}/{x}/{y}.pbf"]\n            },\n            "county": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/county_carto_c2010/{z}/{x}/{y}.pbf"]\n            },\n            "tract": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/tract_carto_c2010/{z}/{x}/{y}.pbf"]\n            },\n            "bg": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/bg_carto_c2010/{z}/{x}/{y}.pbf"]\n            },\n            "place": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/place_carto_c2010/{z}/{x}/{y}.pbf"]\n            }\n        }\n    },\n    "c2000": {\n        "title": "Census 2000",\n        "type": "Census",\n        "sources": {\n            "state": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/state_carto_c2000/{z}/{x}/{y}.pbf"]\n            },\n            "county": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/county_carto_c2000/{z}/{x}/{y}.pbf"]\n            },\n            "tract": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/tract_carto_c2000/{z}/{x}/{y}.pbf"]\n            },\n            "bg": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/bg_carto_c2000/{z}/{x}/{y}.pbf"]\n            },\n            "place": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/place_carto_c2000/{z}/{x}/{y}.pbf"]\n            }\n        }\n    },\n    "c1990": {\n        "title": "Census 1990",\n        "type": "Census",\n        "sources": {\n            "state": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/state_nhgis_c1990/{z}/{x}/{y}.pbf"]\n            },\n            "county": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/county_nhgis_c1990/{z}/{x}/{y}.pbf"]\n            },\n            "tract": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/tract_nhgis_c1990/{z}/{x}/{y}.pbf"]\n            },\n            "bg": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/bg_nhgis_c1990/{z}/{x}/{y}.pbf"]\n            },\n            "place": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/place_nhgis_c1990/{z}/{x}/{y}.pbf"]\n            }\n        }\n    },\n    "c1980": {\n        "title": "Census 1980",\n        "type": "Census",\n        "sources": {\n            "state": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/state_nhgis_c1980/{z}/{x}/{y}.pbf"]\n            },\n            "county": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/county_nhgis_c1980/{z}/{x}/{y}.pbf"]\n            },\n            "tract": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/tract_nhgis_c1980/{z}/{x}/{y}.pbf"]\n            },\n            "place": {\n                "type": "vector",\n                "tiles": ["https://tiles.red-meteor.com/mbtiles/place_nhgis_c1980/{z}/{x}/{y}.pbf"]\n            }\n        }\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _geoscheme = __webpack_require__(3);\n\nvar _geoscheme2 = _interopRequireDefault(_geoscheme);\n\nvar _reduxSetup = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global $ */\n\nfunction populateGeography() {\n\n    var current_store_values = _reduxSetup.Store.getState();\n\n    var geoscheme = current_store_values.geoscheme;\n    var dataset = current_store_values.dataset;\n\n    var html = '<br />';\n\n    var keys = Object.keys(_geoscheme2.default[dataset]);\n\n    if (!keys.includes(geoscheme)) {\n        console.log('does not include geoscheme');\n\n        geoscheme = Object.keys(_geoscheme2.default[dataset])[0];\n        console.log(geoscheme);\n\n        _reduxSetup.Store.dispatch({\n            type: 'CHANGE GEOSCHEME',\n            value: geoscheme\n        });\n    }\n\n    keys.forEach(function (key) {\n        var ifchecked = key === geoscheme ? 'checked' : '';\n        html += '<div class=\"input-group\"><span class=\"input-group-addon\"><input type=\"radio\" name=\"geoschemegroup\"  value=\"' + key + '\" ' + ifchecked + '></span><input type=\"text\" value=\"' + key + '\" class=\"form-control\"></div>';\n    });\n\n    $(\"#geogroup\").html(html);\n\n    $(\"input:radio[name=geoschemegroup]\").change(function () {\n\n        var new_geoscheme = $('input:radio[name=geoschemegroup]:checked').val();\n        console.log(new_geoscheme);\n\n        _reduxSetup.Store.dispatch({\n            type: 'CHANGE GEOSCHEME',\n            value: new_geoscheme\n        });\n    });\n}\n\nexports.default = populateGeography;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3BvcHVsYXRlR2VvZ3JhcGh5LmpzP2EwZTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZ2Vvc2NoZW1lID0gcmVxdWlyZSgnLi8uLi9qc29uL2dlb3NjaGVtZS5qcycpO1xuXG52YXIgX2dlb3NjaGVtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZW9zY2hlbWUpO1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyogZ2xvYmFsICQgKi9cblxuZnVuY3Rpb24gcG9wdWxhdGVHZW9ncmFwaHkoKSB7XG5cbiAgICB2YXIgY3VycmVudF9zdG9yZV92YWx1ZXMgPSBfcmVkdXhTZXR1cC5TdG9yZS5nZXRTdGF0ZSgpO1xuXG4gICAgdmFyIGdlb3NjaGVtZSA9IGN1cnJlbnRfc3RvcmVfdmFsdWVzLmdlb3NjaGVtZTtcbiAgICB2YXIgZGF0YXNldCA9IGN1cnJlbnRfc3RvcmVfdmFsdWVzLmRhdGFzZXQ7XG5cbiAgICB2YXIgaHRtbCA9ICc8YnIgLz4nO1xuXG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhfZ2Vvc2NoZW1lMi5kZWZhdWx0W2RhdGFzZXRdKTtcblxuICAgIGlmICgha2V5cy5pbmNsdWRlcyhnZW9zY2hlbWUpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdkb2VzIG5vdCBpbmNsdWRlIGdlb3NjaGVtZScpO1xuXG4gICAgICAgIGdlb3NjaGVtZSA9IE9iamVjdC5rZXlzKF9nZW9zY2hlbWUyLmRlZmF1bHRbZGF0YXNldF0pWzBdO1xuICAgICAgICBjb25zb2xlLmxvZyhnZW9zY2hlbWUpO1xuXG4gICAgICAgIF9yZWR1eFNldHVwLlN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdDSEFOR0UgR0VPU0NIRU1FJyxcbiAgICAgICAgICAgIHZhbHVlOiBnZW9zY2hlbWVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIGlmY2hlY2tlZCA9IGtleSA9PT0gZ2Vvc2NoZW1lID8gJ2NoZWNrZWQnIDogJyc7XG4gICAgICAgIGh0bWwgKz0gJzxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cFwiPjxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYWRkb25cIj48aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cImdlb3NjaGVtZWdyb3VwXCIgIHZhbHVlPVwiJyArIGtleSArICdcIiAnICsgaWZjaGVja2VkICsgJz48L3NwYW4+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCInICsga2V5ICsgJ1wiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+PC9kaXY+JztcbiAgICB9KTtcblxuICAgICQoXCIjZ2VvZ3JvdXBcIikuaHRtbChodG1sKTtcblxuICAgICQoXCJpbnB1dDpyYWRpb1tuYW1lPWdlb3NjaGVtZWdyb3VwXVwiKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBuZXdfZ2Vvc2NoZW1lID0gJCgnaW5wdXQ6cmFkaW9bbmFtZT1nZW9zY2hlbWVncm91cF06Y2hlY2tlZCcpLnZhbCgpO1xuICAgICAgICBjb25zb2xlLmxvZyhuZXdfZ2Vvc2NoZW1lKTtcblxuICAgICAgICBfcmVkdXhTZXR1cC5TdG9yZS5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnQ0hBTkdFIEdFT1NDSEVNRScsXG4gICAgICAgICAgICB2YWx1ZTogbmV3X2dlb3NjaGVtZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gcG9wdWxhdGVHZW9ncmFwaHk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL3BvcHVsYXRlR2VvZ3JhcGh5LmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nexports.default = function () {\n\n    $(\'#accordion\').html(\'\');\n\n    var current_store_values = _reduxSetup.Store.getState();\n    var dataset = current_store_values.dataset;\n    console.log(\'dataset\');\n    console.log(dataset);\n    var theme = current_store_values.theme;\n    console.log(_datatree2.default[dataset]);\n    var theme_keys = Object.keys(_datatree2.default[dataset]);\n\n    var sections_array = theme_keys.map(function (key) {\n        return _datatree2.default[dataset][key].section;\n    });\n\n    var unique_sections = Array.from(new Set(sections_array));\n\n    unique_sections.sort();\n\n    unique_sections.forEach(function (section, i) {\n        $(\'#accordion\').append(\'<div class="panel panel-default"><div class="panel-heading" role="tab" id="heading\' + i + \'"><h4 class="panel-title"><a data-toggle="collapse" data-parent="#accordion" href="#collapse\' + i + \'" aria-expanded="false" aria-controls="collapse">\' + section + \'</a></h4></div><div id="collapse\' + i + \'" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading\' + i + \'"><div id="id\' + section + \'" class="panel-body"></div></div></div>\');\n    });\n\n    theme_keys.forEach(function (key) {\n        var vchecked = theme === key ? \'checked\' : \'\';\n        $(\'#id\' + _datatree2.default[dataset][key].section).append(\'<div class="radio"><label><input type="radio" name="optionsRadios" value="\' + key + \'" \' + vchecked + \'> \' + _datatree2.default[dataset][key].title + \'</label></div>\'); //to accordion\n    });\n\n    $(\'input[name=optionsRadios]:radio\').change(function () {\n        _reduxSetup.Store.dispatch({\n            type: \'CHANGE THEME\',\n            value: this.value\n        });\n    });\n};\n\nvar _datatree = __webpack_require__(9);\n\nvar _datatree2 = _interopRequireDefault(_datatree);\n\nvar _reduxSetup = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3BvcHVsYXRlVGhlbWVzLmpzP2MwMTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICgpIHtcblxuICAgICQoJyNhY2NvcmRpb24nKS5odG1sKCcnKTtcblxuICAgIHZhciBjdXJyZW50X3N0b3JlX3ZhbHVlcyA9IF9yZWR1eFNldHVwLlN0b3JlLmdldFN0YXRlKCk7XG4gICAgdmFyIGRhdGFzZXQgPSBjdXJyZW50X3N0b3JlX3ZhbHVlcy5kYXRhc2V0O1xuICAgIGNvbnNvbGUubG9nKCdkYXRhc2V0Jyk7XG4gICAgY29uc29sZS5sb2coZGF0YXNldCk7XG4gICAgdmFyIHRoZW1lID0gY3VycmVudF9zdG9yZV92YWx1ZXMudGhlbWU7XG4gICAgY29uc29sZS5sb2coX2RhdGF0cmVlMi5kZWZhdWx0W2RhdGFzZXRdKTtcbiAgICB2YXIgdGhlbWVfa2V5cyA9IE9iamVjdC5rZXlzKF9kYXRhdHJlZTIuZGVmYXVsdFtkYXRhc2V0XSk7XG5cbiAgICB2YXIgc2VjdGlvbnNfYXJyYXkgPSB0aGVtZV9rZXlzLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1ba2V5XS5zZWN0aW9uO1xuICAgIH0pO1xuXG4gICAgdmFyIHVuaXF1ZV9zZWN0aW9ucyA9IEFycmF5LmZyb20obmV3IFNldChzZWN0aW9uc19hcnJheSkpO1xuXG4gICAgdW5pcXVlX3NlY3Rpb25zLnNvcnQoKTtcblxuICAgIHVuaXF1ZV9zZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChzZWN0aW9uLCBpKSB7XG4gICAgICAgICQoJyNhY2NvcmRpb24nKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJwYW5lbCBwYW5lbC1kZWZhdWx0XCI+PGRpdiBjbGFzcz1cInBhbmVsLWhlYWRpbmdcIiByb2xlPVwidGFiXCIgaWQ9XCJoZWFkaW5nJyArIGkgKyAnXCI+PGg0IGNsYXNzPVwicGFuZWwtdGl0bGVcIj48YSBkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCIgZGF0YS1wYXJlbnQ9XCIjYWNjb3JkaW9uXCIgaHJlZj1cIiNjb2xsYXBzZScgKyBpICsgJ1wiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGFyaWEtY29udHJvbHM9XCJjb2xsYXBzZVwiPicgKyBzZWN0aW9uICsgJzwvYT48L2g0PjwvZGl2PjxkaXYgaWQ9XCJjb2xsYXBzZScgKyBpICsgJ1wiIGNsYXNzPVwicGFuZWwtY29sbGFwc2UgY29sbGFwc2VcIiByb2xlPVwidGFicGFuZWxcIiBhcmlhLWxhYmVsbGVkYnk9XCJoZWFkaW5nJyArIGkgKyAnXCI+PGRpdiBpZD1cImlkJyArIHNlY3Rpb24gKyAnXCIgY2xhc3M9XCJwYW5lbC1ib2R5XCI+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG4gICAgfSk7XG5cbiAgICB0aGVtZV9rZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgdmNoZWNrZWQgPSB0aGVtZSA9PT0ga2V5ID8gJ2NoZWNrZWQnIDogJyc7XG4gICAgICAgICQoJyNpZCcgKyBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1ba2V5XS5zZWN0aW9uKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJyYWRpb1wiPjxsYWJlbD48aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIm9wdGlvbnNSYWRpb3NcIiB2YWx1ZT1cIicgKyBrZXkgKyAnXCIgJyArIHZjaGVja2VkICsgJz4gJyArIF9kYXRhdHJlZTIuZGVmYXVsdFtkYXRhc2V0XVtrZXldLnRpdGxlICsgJzwvbGFiZWw+PC9kaXY+Jyk7IC8vdG8gYWNjb3JkaW9uXG4gICAgfSk7XG5cbiAgICAkKCdpbnB1dFtuYW1lPW9wdGlvbnNSYWRpb3NdOnJhZGlvJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3JlZHV4U2V0dXAuU3RvcmUuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ0NIQU5HRSBUSEVNRScsXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5cbnZhciBfZGF0YXRyZWUgPSByZXF1aXJlKCcuLy4uL2pzb24vZGF0YXRyZWUuanMnKTtcblxudmFyIF9kYXRhdHJlZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kYXRhdHJlZSk7XG5cbnZhciBfcmVkdXhTZXR1cCA9IHJlcXVpcmUoJy4vcmVkdXhTZXR1cC5qcycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZS9wb3B1bGF0ZVRoZW1lcy5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0EiLCJzb3VyY2VSb290IjoiIn0=')},,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = {\n  "version": 8,\n  "name": "Klokantech Basic",\n  "metadata": {\n    "mapbox:autocomposite": false,\n    "mapbox:type": "template",\n    "maputnik:renderer": "mbgljs"\n  },\n  "center": [8.54806714892635, 47.37180823552663],\n  "zoom": 12.241790506353492,\n  "bearing": 0,\n  "pitch": 0,\n  "sources": {\n    "openmaptiles": {\n      "attribution": "<a href=\'http://openmaptiles.org/\'>©OpenMapTiles</a> <a href=\'www.openstreetmap.org/copyright\' >©OpenStreetMap contributors</a>",\n      "type": "vector",\n      "tiles": ["https://tiles.red-meteor.com/mbtiles/united_states_of_america/{z}/{x}/{y}.pbf"],\n      "minzoom": 0,\n      "maxzoom": 13\n    }\n  },\n  "glyphs": "https://free.tilehosting.com/fonts/{fontstack}/{range}.pbf?key=igsf1AR2UOc8hfBlRsM2",\n  "layers": [{\n    "id": "background",\n    "type": "background",\n    "paint": {\n      "background-color": "hsl(47, 26%, 88%)"\n    }\n  }, {\n    "id": "landuse-residential",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "landuse",\n    "filter": ["all", ["==", "$type", "Polygon"], ["==", "class", "residential"]],\n    "layout": {\n      "visibility": "visible"\n    },\n    "paint": {\n      "fill-color": "hsl(47, 13%, 86%)",\n      "fill-opacity": 0.7\n    }\n  }, {\n    "id": "landcover_grass",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "landcover",\n    "filter": ["==", "class", "grass"],\n    "paint": {\n      "fill-color": "hsl(82, 46%, 72%)",\n      "fill-opacity": 0.45\n    }\n  }, {\n    "id": "park",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "park",\n    "paint": {\n      "fill-color": "rgba(192, 216, 151, 0.53)",\n      "fill-opacity": 1\n    }\n  }, {\n    "id": "landcover_wood",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "landcover",\n    "filter": ["==", "class", "wood"],\n    "paint": {\n      "fill-color": "hsl(82, 46%, 72%)",\n      "fill-opacity": {\n        "base": 1,\n        "stops": [[8, 0.6], [22, 1]]\n      }\n    }\n  }, {\n    "id": "water",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "water",\n    "filter": ["==", "$type", "Polygon"],\n    "paint": {\n      "fill-color": "hsl(205, 56%, 73%)"\n    }\n  }, {\n    "id": "landuse",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "landuse",\n    "filter": ["==", "class", "agriculture"],\n    "layout": {\n      "visibility": "visible"\n    },\n    "paint": {\n      "fill-color": "#eae0d0"\n    }\n  }, {\n    "id": "landuse_overlay_national_park",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "landcover",\n    "filter": ["==", "class", "national_park"],\n    "paint": {\n      "fill-color": "#E1EBB0",\n      "fill-opacity": {\n        "base": 1,\n        "stops": [[5, 0], [9, 0.75]]\n      }\n    }\n  }, {\n    "id": "park_outline",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "park",\n    "layout": {},\n    "paint": {\n      "line-color": "rgba(159, 183, 118, 0.69)",\n      "line-dasharray": [0.5, 1]\n    }\n  }, {\n    "id": "waterway",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "waterway",\n    "filter": ["==", "$type", "LineString"],\n    "paint": {\n      "line-color": "hsl(205, 56%, 73%)",\n      "line-width": {\n        "base": 1.4,\n        "stops": [[8, 1], [20, 8]]\n      },\n      "line-opacity": 1\n    }\n  }, {\n    "id": "building",\n    "type": "fill",\n    "source": "openmaptiles",\n    "source-layer": "building",\n    "paint": {\n      "fill-color": "hsl(39, 41%, 86%)",\n      "fill-outline-color": "hsl(36, 45%, 80%)",\n      "fill-opacity": {\n        "base": 1,\n        "stops": [[13, 0.6], [14, 1]]\n      }\n    }\n  }, {\n    "id": "road_path",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "transportation",\n    "filter": ["all", ["==", "$type", "LineString"], ["in", "class", "path", "track"]],\n    "layout": {\n      "line-cap": "square",\n      "line-join": "bevel"\n    },\n    "paint": {\n      "line-color": "hsl(0, 0%, 97%)",\n      "line-dasharray": [1, 1],\n      "line-width": {\n        "base": 1.55,\n        "stops": [[4, 0.25], [20, 10]]\n      }\n    }\n  }, {\n    "id": "road_minor",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "transportation",\n    "filter": ["all", ["==", "$type", "LineString"], ["in", "class", "minor", "service"]],\n    "layout": {\n      "line-cap": "round",\n      "line-join": "round"\n    },\n    "paint": {\n      "line-color": "hsl(0, 0%, 97%)",\n      "line-width": {\n        "base": 1.55,\n        "stops": [[4, 0.25], [20, 30]]\n      }\n    }\n  }, {\n    "id": "road_trunk_primary",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "transportation",\n    "filter": ["all", ["==", "$type", "LineString"], ["in", "class", "trunk", "primary"]],\n    "layout": {\n      "line-cap": "round",\n      "line-join": "round"\n    },\n    "paint": {\n      "line-color": "#fff",\n      "line-width": {\n        "base": 1.4,\n        "stops": [[6, 0.5], [20, 30]]\n      }\n    }\n  }, {\n    "id": "road_secondary_tertiary",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "transportation",\n    "filter": ["all", ["==", "$type", "LineString"], ["in", "class", "secondary", "tertiary"]],\n    "layout": {\n      "line-cap": "round",\n      "line-join": "round"\n    },\n    "paint": {\n      "line-color": "#fff",\n      "line-width": {\n        "base": 1.4,\n        "stops": [[6, 0.5], [20, 20]]\n      }\n    }\n  }, {\n    "id": "road_major_motorway",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "transportation",\n    "filter": ["all", ["==", "$type", "LineString"], ["==", "class", "motorway"]],\n    "layout": {\n      "line-cap": "round",\n      "line-join": "round"\n    },\n    "paint": {\n      "line-color": "hsl(0, 0%, 100%)",\n      "line-width": {\n        "base": 1.4,\n        "stops": [[8, 1], [16, 10]]\n      },\n      "line-offset": 0\n    }\n  }, {\n    "id": "admin_sub",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "boundary",\n    "filter": ["in", "admin_level", 4, 6, 8],\n    "layout": {\n      "visibility": "visible"\n    },\n    "paint": {\n      "line-color": "rgb(50, 50, 50)",\n      "line-opacity": 0.8,\n      "line-width": 1.5,\n      "line-dasharray": [2, 1]\n    }\n  }, {\n    "id": "admin_country",\n    "type": "line",\n    "source": "openmaptiles",\n    "source-layer": "boundary",\n    "filter": ["all", ["<=", "admin_level", 2], ["==", "$type", "LineString"]],\n    "layout": {\n      "line-cap": "round",\n      "line-join": "round"\n    },\n    "paint": {\n      "line-color": "hsla(0, 8%, 22%, 0.51)",\n      "line-width": {\n        "base": 1.3,\n        "stops": [[3, 0.5], [22, 15]]\n      }\n    }\n  }, {\n    "id": "poi_label",\n    "type": "symbol",\n    "source": "openmaptiles",\n    "source-layer": "poi",\n    "minzoom": 5,\n    "filter": ["all", ["==", "$type", "Point"], ["==", "rank", 1]],\n    "layout": {\n      "text-size": 11,\n      "text-font": ["Klokantech Noto Sans Regular", "Klokantech Noto Sans CJK Regular"],\n      "visibility": "visible",\n      "text-offset": [0, 0.5],\n      "icon-size": 1,\n      "text-anchor": "top",\n      "text-field": "{name}",\n      "text-max-width": 8\n    },\n    "paint": {\n      "text-color": "#666",\n      "text-halo-width": 1,\n      "text-halo-color": "rgba(255,255,255,0.75)",\n      "text-halo-blur": 1\n    }\n  }, {\n    "id": "road_major_label",\n    "type": "symbol",\n    "source": "openmaptiles",\n    "source-layer": "transportation_name",\n    "filter": ["==", "$type", "LineString"],\n    "layout": {\n      "symbol-placement": "line",\n      "text-field": "{name}",\n      "text-font": ["Klokantech Noto Sans Regular", "Klokantech Noto Sans CJK Regular"],\n      "text-transform": "uppercase",\n      "text-letter-spacing": 0.1,\n      "text-size": {\n        "base": 1.4,\n        "stops": [[10, 8], [20, 14]]\n      },\n      "text-rotation-alignment": "map"\n    },\n    "paint": {\n      "text-color": "#000",\n      "text-halo-color": "hsl(0, 0%, 100%)",\n      "text-halo-width": 2\n    }\n  }, {\n    "id": "place_label_other",\n    "type": "symbol",\n    "source": "openmaptiles",\n    "source-layer": "place",\n    "minzoom": 8,\n    "filter": ["all", ["==", "$type", "Point"], ["!=", "class", "city"]],\n    "layout": {\n      "text-field": "{name_en}",\n      "text-font": ["Klokantech Noto Sans Regular", "Klokantech Noto Sans CJK Regular"],\n      "text-max-width": 6,\n      "text-size": {\n        "stops": [[6, 10], [12, 14]]\n      },\n      "visibility": "visible",\n      "text-anchor": "center"\n    },\n    "paint": {\n      "text-color": "hsl(0, 10%, 25%)",\n      "text-halo-color": "hsl(0, 0%, 100%)",\n      "text-halo-blur": 0,\n      "text-halo-width": 2\n    }\n  }, {\n    "id": "place_label_city",\n    "type": "symbol",\n    "source": "openmaptiles",\n    "source-layer": "place",\n    "maxzoom": 16,\n    "filter": ["all", ["==", "$type", "Point"], ["==", "class", "city"]],\n    "layout": {\n      "text-field": "{name_en}",\n      "text-font": ["Klokantech Noto Sans Regular", "Klokantech Noto Sans CJK Regular"],\n      "text-max-width": 10,\n      "text-size": {\n        "stops": [[3, 12], [8, 16]]\n      }\n    },\n    "paint": {\n      "text-color": "hsl(0, 0%, 0%)",\n      "text-halo-color": "hsla(0, 0%, 100%, 0.75)",\n      "text-halo-blur": 0,\n      "text-halo-width": 2\n    }\n  }, {\n    "id": "country_label",\n    "type": "symbol",\n    "source": "openmaptiles",\n    "source-layer": "place",\n    "maxzoom": 12,\n    "filter": ["all", ["==", "$type", "Point"], ["==", "class", "country"]],\n    "layout": {\n      "text-field": "{name}",\n      "text-font": ["Klokantech Noto Sans Bold", "Klokantech Noto Sans CJK Bold"],\n      "text-max-width": 10,\n      "text-size": {\n        "stops": [[3, 12], [8, 22]]\n      }\n    },\n    "paint": {\n      "text-color": "hsl(0, 0%, 13%)",\n      "text-halo-color": "rgba(255,255,255,0.75)",\n      "text-halo-width": 2,\n      "text-halo-blur": 0\n    }\n  }],\n  "id": "ciwf4zbsv007y2pmt2rspc1dc"\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(mapboxgl) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (map) {\n    map.addControl(new _EasyButtonCtrl2.default('custom_search', 'fa-search', 'Search'), 'top-right');\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(new _LegendCtrl2.default(), 'bottom-right');\n    map.addControl(new _EasyButtonCtrl2.default('choose_theme', 'fa-bars', 'Select a Theme'), 'top-left');\n    map.addControl(new _EasyButtonCtrl2.default('view_table', 'fa-table', 'View a Data Table'), 'top-left');\n    map.addControl(new _EasyButtonCtrl2.default('view_chart', 'fa-line-chart', 'View a Chart'), 'top-left');\n    map.addControl(new _EasyButtonCtrl2.default('save_map', 'fa-floppy-o', 'Save a Map Image'), 'top-left');\n    map.addControl(new _EasyButtonCtrl2.default('clear_selection', 'fa-eraser', 'Clear Selection'), 'top-left');\n};\n\nvar _LegendCtrl = __webpack_require__(57);\n\nvar _LegendCtrl2 = _interopRequireDefault(_LegendCtrl);\n\nvar _EasyButtonCtrl = __webpack_require__(56);\n\nvar _EasyButtonCtrl2 = _interopRequireDefault(_EasyButtonCtrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL2FkZE1hcENvbnRyb2xzLmpzPzZkNmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChtYXApIHtcbiAgICBtYXAuYWRkQ29udHJvbChuZXcgX0Vhc3lCdXR0b25DdHJsMi5kZWZhdWx0KCdjdXN0b21fc2VhcmNoJywgJ2ZhLXNlYXJjaCcsICdTZWFyY2gnKSwgJ3RvcC1yaWdodCcpO1xuICAgIG1hcC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5OYXZpZ2F0aW9uQ29udHJvbCgpKTtcbiAgICBtYXAuYWRkQ29udHJvbChuZXcgX0xlZ2VuZEN0cmwyLmRlZmF1bHQoKSwgJ2JvdHRvbS1yaWdodCcpO1xuICAgIG1hcC5hZGRDb250cm9sKG5ldyBfRWFzeUJ1dHRvbkN0cmwyLmRlZmF1bHQoJ2Nob29zZV90aGVtZScsICdmYS1iYXJzJywgJ1NlbGVjdCBhIFRoZW1lJyksICd0b3AtbGVmdCcpO1xuICAgIG1hcC5hZGRDb250cm9sKG5ldyBfRWFzeUJ1dHRvbkN0cmwyLmRlZmF1bHQoJ3ZpZXdfdGFibGUnLCAnZmEtdGFibGUnLCAnVmlldyBhIERhdGEgVGFibGUnKSwgJ3RvcC1sZWZ0Jyk7XG4gICAgbWFwLmFkZENvbnRyb2wobmV3IF9FYXN5QnV0dG9uQ3RybDIuZGVmYXVsdCgndmlld19jaGFydCcsICdmYS1saW5lLWNoYXJ0JywgJ1ZpZXcgYSBDaGFydCcpLCAndG9wLWxlZnQnKTtcbiAgICBtYXAuYWRkQ29udHJvbChuZXcgX0Vhc3lCdXR0b25DdHJsMi5kZWZhdWx0KCdzYXZlX21hcCcsICdmYS1mbG9wcHktbycsICdTYXZlIGEgTWFwIEltYWdlJyksICd0b3AtbGVmdCcpO1xuICAgIG1hcC5hZGRDb250cm9sKG5ldyBfRWFzeUJ1dHRvbkN0cmwyLmRlZmF1bHQoJ2NsZWFyX3NlbGVjdGlvbicsICdmYS1lcmFzZXInLCAnQ2xlYXIgU2VsZWN0aW9uJyksICd0b3AtbGVmdCcpO1xufTtcblxudmFyIF9MZWdlbmRDdHJsID0gcmVxdWlyZSgnLi4vd2lkZ2V0cy9MZWdlbmRDdHJsLmpzJyk7XG5cbnZhciBfTGVnZW5kQ3RybDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9MZWdlbmRDdHJsKTtcblxudmFyIF9FYXN5QnV0dG9uQ3RybCA9IHJlcXVpcmUoJy4uL3dpZGdldHMvRWFzeUJ1dHRvbkN0cmwuanMnKTtcblxudmFyIF9FYXN5QnV0dG9uQ3RybDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FYXN5QnV0dG9uQ3RybCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL2FkZE1hcENvbnRyb2xzLmpzXG4vLyBtb2R1bGUgaWQgPSA0NFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.setTileLayers = exports.setTileSources = undefined;\n\nvar _reduxSetup = __webpack_require__(1);\n\nvar _dataset = __webpack_require__(20);\n\nvar _dataset2 = _interopRequireDefault(_dataset);\n\nvar _geoscheme = __webpack_require__(3);\n\nvar _geoscheme2 = _interopRequireDefault(_geoscheme);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction setTileSources(map) {\n\n    // remove old sources\n    // TODO\n\n    var sources_obj = _dataset2.default[_reduxSetup.Store.getState().dataset].sources;\n\n    console.log(sources_obj);\n\n    Object.keys(sources_obj).forEach(function (key) {\n        map.addSource(key, sources_obj[key]);\n    });\n}\n\nfunction setTileLayers(map) {\n\n    // remove old layers\n    // TODO\n\n    var current_store_values = _reduxSetup.Store.getState();\n    var current_dataset = current_store_values.dataset;\n    var geoscheme = current_store_values.geoscheme;\n\n    Object.keys(_geoscheme2.default[current_dataset][geoscheme]).forEach(function (key) {\n\n        var obj = {\n            "id": key + "-fill",\n            "type": "fill",\n            "source": key,\n            "source-layer": key + "geojson",\n            "minzoom": _geoscheme2.default[current_dataset][geoscheme][key][0],\n            "maxzoom": _geoscheme2.default[current_dataset][geoscheme][key][1],\n            "paint": {\n                "fill-color": {\n                    "property": "geonum",\n                    "type": "categorical",\n                    "default": "transparent",\n                    "stops": [["0", "blue"]]\n                }\n            }\n        };\n\n        map.addLayer(obj, \'road_major_motorway\');\n    });\n}\n\nexports.setTileSources = setTileSources;\nexports.setTileLayers = setTileLayers;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL2dldFRpbGVzLmpzPzEyMGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnNldFRpbGVMYXllcnMgPSBleHBvcnRzLnNldFRpbGVTb3VyY2VzID0gdW5kZWZpbmVkO1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxudmFyIF9kYXRhc2V0ID0gcmVxdWlyZSgnLi4vanNvbi9kYXRhc2V0LmpzJyk7XG5cbnZhciBfZGF0YXNldDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kYXRhc2V0KTtcblxudmFyIF9nZW9zY2hlbWUgPSByZXF1aXJlKCcuLi9qc29uL2dlb3NjaGVtZS5qcycpO1xuXG52YXIgX2dlb3NjaGVtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZW9zY2hlbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBzZXRUaWxlU291cmNlcyhtYXApIHtcblxuICAgIC8vIHJlbW92ZSBvbGQgc291cmNlc1xuICAgIC8vIFRPRE9cblxuICAgIHZhciBzb3VyY2VzX29iaiA9IF9kYXRhc2V0Mi5kZWZhdWx0W19yZWR1eFNldHVwLlN0b3JlLmdldFN0YXRlKCkuZGF0YXNldF0uc291cmNlcztcblxuICAgIGNvbnNvbGUubG9nKHNvdXJjZXNfb2JqKTtcblxuICAgIE9iamVjdC5rZXlzKHNvdXJjZXNfb2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgbWFwLmFkZFNvdXJjZShrZXksIHNvdXJjZXNfb2JqW2tleV0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBzZXRUaWxlTGF5ZXJzKG1hcCkge1xuXG4gICAgLy8gcmVtb3ZlIG9sZCBsYXllcnNcbiAgICAvLyBUT0RPXG5cbiAgICB2YXIgY3VycmVudF9zdG9yZV92YWx1ZXMgPSBfcmVkdXhTZXR1cC5TdG9yZS5nZXRTdGF0ZSgpO1xuICAgIHZhciBjdXJyZW50X2RhdGFzZXQgPSBjdXJyZW50X3N0b3JlX3ZhbHVlcy5kYXRhc2V0O1xuICAgIHZhciBnZW9zY2hlbWUgPSBjdXJyZW50X3N0b3JlX3ZhbHVlcy5nZW9zY2hlbWU7XG5cbiAgICBPYmplY3Qua2V5cyhfZ2Vvc2NoZW1lMi5kZWZhdWx0W2N1cnJlbnRfZGF0YXNldF1bZ2Vvc2NoZW1lXSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cbiAgICAgICAgdmFyIG9iaiA9IHtcbiAgICAgICAgICAgIFwiaWRcIjoga2V5ICsgXCItZmlsbFwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwiZmlsbFwiLFxuICAgICAgICAgICAgXCJzb3VyY2VcIjoga2V5LFxuICAgICAgICAgICAgXCJzb3VyY2UtbGF5ZXJcIjoga2V5ICsgXCJnZW9qc29uXCIsXG4gICAgICAgICAgICBcIm1pbnpvb21cIjogX2dlb3NjaGVtZTIuZGVmYXVsdFtjdXJyZW50X2RhdGFzZXRdW2dlb3NjaGVtZV1ba2V5XVswXSxcbiAgICAgICAgICAgIFwibWF4em9vbVwiOiBfZ2Vvc2NoZW1lMi5kZWZhdWx0W2N1cnJlbnRfZGF0YXNldF1bZ2Vvc2NoZW1lXVtrZXldWzFdLFxuICAgICAgICAgICAgXCJwYWludFwiOiB7XG4gICAgICAgICAgICAgICAgXCJmaWxsLWNvbG9yXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJwcm9wZXJ0eVwiOiBcImdlb251bVwiLFxuICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJjYXRlZ29yaWNhbFwiLFxuICAgICAgICAgICAgICAgICAgICBcImRlZmF1bHRcIjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgICAgICAgICBcInN0b3BzXCI6IFtbXCIwXCIsIFwiYmx1ZVwiXV1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgbWFwLmFkZExheWVyKG9iaiwgJ3JvYWRfbWFqb3JfbW90b3J3YXknKTtcbiAgICB9KTtcbn1cblxuZXhwb3J0cy5zZXRUaWxlU291cmNlcyA9IHNldFRpbGVTb3VyY2VzO1xuZXhwb3J0cy5zZXRUaWxlTGF5ZXJzID0gc2V0VGlsZUxheWVycztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGUvZ2V0VGlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n\n    $('#myModal').modal({\n        show: false\n    });\n\n    document.getElementById('choose_theme').addEventListener('click', clickChooseTheme, false);\n\n    function clickChooseTheme() {\n        $('#myModal').modal('show');\n    }\n};\n\nvar _reduxSetup = __webpack_require__(1);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3NldHVwTWFwQ29udHJvbEV2ZW50cy5qcz8zZmY5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAkKCcjbXlNb2RhbCcpLm1vZGFsKHtcbiAgICAgICAgc2hvdzogZmFsc2VcbiAgICB9KTtcblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaG9vc2VfdGhlbWUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrQ2hvb3NlVGhlbWUsIGZhbHNlKTtcblxuICAgIGZ1bmN0aW9uIGNsaWNrQ2hvb3NlVGhlbWUoKSB7XG4gICAgICAgICQoJyNteU1vZGFsJykubW9kYWwoJ3Nob3cnKTtcbiAgICB9XG59O1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGUvc2V0dXBNYXBDb250cm9sRXZlbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSA0NlxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (map) {\n\n    (0, _reduxSetup.observeStore)('theme', function (theme) {\n        console.log('theme changed to ' + theme);\n        (0, _updateMap2.default)(map);\n    });\n\n    (0, _reduxSetup.observeStore)('dataset', function (dataset) {\n        console.log('dataset changed to ' + dataset);\n        (0, _populateGeography2.default)();\n    });\n\n    (0, _reduxSetup.observeStore)('geoscheme', function (geoscheme) {\n        console.log('geoscheme changed to ' + geoscheme);\n        (0, _populateThemes2.default)();\n    });\n\n    // will only be called once\n    (0, _populateDatasets2.default)();\n    (0, _populateGeography2.default)();\n    (0, _populateThemes2.default)();\n};\n\nvar _reduxSetup = __webpack_require__(1);\n\nvar _updateMap = __webpack_require__(15);\n\nvar _updateMap2 = _interopRequireDefault(_updateMap);\n\nvar _populateThemes = __webpack_require__(22);\n\nvar _populateThemes2 = _interopRequireDefault(_populateThemes);\n\nvar _populateDatasets = __webpack_require__(54);\n\nvar _populateDatasets2 = _interopRequireDefault(_populateDatasets);\n\nvar _populateGeography = __webpack_require__(21);\n\nvar _populateGeography2 = _interopRequireDefault(_populateGeography);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3NldHVwTWFwQ29udHJvbHMuanM/MGQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKG1hcCkge1xuXG4gICAgKDAsIF9yZWR1eFNldHVwLm9ic2VydmVTdG9yZSkoJ3RoZW1lJywgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0aGVtZSBjaGFuZ2VkIHRvICcgKyB0aGVtZSk7XG4gICAgICAgICgwLCBfdXBkYXRlTWFwMi5kZWZhdWx0KShtYXApO1xuICAgIH0pO1xuXG4gICAgKDAsIF9yZWR1eFNldHVwLm9ic2VydmVTdG9yZSkoJ2RhdGFzZXQnLCBmdW5jdGlvbiAoZGF0YXNldCkge1xuICAgICAgICBjb25zb2xlLmxvZygnZGF0YXNldCBjaGFuZ2VkIHRvICcgKyBkYXRhc2V0KTtcbiAgICAgICAgKDAsIF9wb3B1bGF0ZUdlb2dyYXBoeTIuZGVmYXVsdCkoKTtcbiAgICB9KTtcblxuICAgICgwLCBfcmVkdXhTZXR1cC5vYnNlcnZlU3RvcmUpKCdnZW9zY2hlbWUnLCBmdW5jdGlvbiAoZ2Vvc2NoZW1lKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdnZW9zY2hlbWUgY2hhbmdlZCB0byAnICsgZ2Vvc2NoZW1lKTtcbiAgICAgICAgKDAsIF9wb3B1bGF0ZVRoZW1lczIuZGVmYXVsdCkoKTtcbiAgICB9KTtcblxuICAgIC8vIHdpbGwgb25seSBiZSBjYWxsZWQgb25jZVxuICAgICgwLCBfcG9wdWxhdGVEYXRhc2V0czIuZGVmYXVsdCkoKTtcbiAgICAoMCwgX3BvcHVsYXRlR2VvZ3JhcGh5Mi5kZWZhdWx0KSgpO1xuICAgICgwLCBfcG9wdWxhdGVUaGVtZXMyLmRlZmF1bHQpKCk7XG59O1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxudmFyIF91cGRhdGVNYXAgPSByZXF1aXJlKCcuL3VwZGF0ZU1hcC5qcycpO1xuXG52YXIgX3VwZGF0ZU1hcDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91cGRhdGVNYXApO1xuXG52YXIgX3BvcHVsYXRlVGhlbWVzID0gcmVxdWlyZSgnLi9wb3B1bGF0ZVRoZW1lcy5qcycpO1xuXG52YXIgX3BvcHVsYXRlVGhlbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BvcHVsYXRlVGhlbWVzKTtcblxudmFyIF9wb3B1bGF0ZURhdGFzZXRzID0gcmVxdWlyZSgnLi9wb3B1bGF0ZURhdGFzZXRzLmpzJyk7XG5cbnZhciBfcG9wdWxhdGVEYXRhc2V0czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3B1bGF0ZURhdGFzZXRzKTtcblxudmFyIF9wb3B1bGF0ZUdlb2dyYXBoeSA9IHJlcXVpcmUoJy4vcG9wdWxhdGVHZW9ncmFwaHkuanMnKTtcblxudmFyIF9wb3B1bGF0ZUdlb2dyYXBoeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3B1bGF0ZUdlb2dyYXBoeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL3NldHVwTWFwQ29udHJvbHMuanNcbi8vIG1vZHVsZSBpZCA9IDQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n        var context = this,\n            args = arguments;\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        }, wait);\n        if (immediate && !timeout) func.apply(context, args);\n    };\n}\n\nexports.debounce = debounce;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3V0aWxpdHlGdW5jdGlvbnMuanM/MDM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuLy8gUmV0dXJucyBhIGZ1bmN0aW9uLCB0aGF0LCBhcyBsb25nIGFzIGl0IGNvbnRpbnVlcyB0byBiZSBpbnZva2VkLCB3aWxsIG5vdFxuLy8gYmUgdHJpZ2dlcmVkLiBUaGUgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgaXQgc3RvcHMgYmVpbmcgY2FsbGVkIGZvclxuLy8gTiBtaWxsaXNlY29uZHMuIElmIGBpbW1lZGlhdGVgIGlzIHBhc3NlZCwgdHJpZ2dlciB0aGUgZnVuY3Rpb24gb24gdGhlXG4vLyBsZWFkaW5nIGVkZ2UsIGluc3RlYWQgb2YgdGhlIHRyYWlsaW5nLlxuZnVuY3Rpb24gZGVib3VuY2UoZnVuYywgd2FpdCwgaW1tZWRpYXRlKSB7XG4gICAgdmFyIHRpbWVvdXQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNvbnRleHQgPSB0aGlzLFxuICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIGlmICghaW1tZWRpYXRlKSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9LCB3YWl0KTtcbiAgICAgICAgaWYgKGltbWVkaWF0ZSAmJiAhdGltZW91dCkgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICB9O1xufVxuXG5leHBvcnRzLmRlYm91bmNlID0gZGVib3VuY2U7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL3V0aWxpdHlGdW5jdGlvbnMuanNcbi8vIG1vZHVsZSBpZCA9IDQ4XG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAuY3NzP2Y3ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3Ncbi8vIG1vZHVsZSBpZCA9IDQ5XG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hcGJveC1nbC9kaXN0L21hcGJveC1nbC5jc3M/OGNlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYXBib3gtZ2wvZGlzdC9tYXBib3gtZ2wuY3NzXG4vLyBtb2R1bGUgaWQgPSA1MFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2FwcC5jc3M/NTk0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Nzcy9hcHAuY3NzXG4vLyBtb2R1bGUgaWQgPSA1MVxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9")},,function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(50);\n\n__webpack_require__(49);\n\n__webpack_require__(51);\n\nvar _mapboxGl = __webpack_require__(4);\n\nvar _mapboxGl2 = _interopRequireDefault(_mapboxGl);\n\n__webpack_require__(0);\n\n__webpack_require__(8);\n\nvar _utilityFunctions = __webpack_require__(48);\n\nvar _getTiles = __webpack_require__(45);\n\nvar _updateMap = __webpack_require__(15);\n\nvar _updateMap2 = _interopRequireDefault(_updateMap);\n\nvar _maputnik_style = __webpack_require__(43);\n\nvar _maputnik_style2 = _interopRequireDefault(_maputnik_style);\n\nvar _addMapControls = __webpack_require__(44);\n\nvar _addMapControls2 = _interopRequireDefault(_addMapControls);\n\nvar _setupMapControls = __webpack_require__(47);\n\nvar _setupMapControls2 = _interopRequireDefault(_setupMapControls);\n\nvar _setupMapControlEvents = __webpack_require__(46);\n\nvar _setupMapControlEvents2 = _interopRequireDefault(_setupMapControlEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// set up map\nvar map = new _mapboxGl2.default.Map({\n    container: 'map',\n    style: _maputnik_style2.default,\n    minZoom: 3,\n    maxZoom: 13.99,\n    zoom: 3,\n    center: [-104, 39]\n});\n\n(0, _addMapControls2.default)(map);\n(0, _setupMapControls2.default)(map);\n(0, _setupMapControlEvents2.default)(map);\n\nmap.on('load', function () {\n\n    (0, _getTiles.setTileSources)(map);\n    (0, _getTiles.setTileLayers)(map);\n\n    // startup hack, remove when mapbox gl js implements dataend\n    var interval = setInterval(function () {\n        var features = map.queryRenderedFeatures({\n            layers: ['state-fill']\n        }) || [];\n\n        if (features.length > 0) {\n            (0, _updateMap2.default)(map);\n            clearInterval(interval);\n        }\n    }, 250);\n});\n\nmap.on('moveend', (0, _utilityFunctions.debounce)(function () {\n    (0, _updateMap2.default)(map);\n}, 250));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzPzdhMjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuLi9ub2RlX21vZHVsZXMvbWFwYm94LWdsL2Rpc3QvbWFwYm94LWdsLmNzcycpO1xuXG5yZXF1aXJlKCcuLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MnKTtcblxucmVxdWlyZSgnLi9jc3MvYXBwLmNzcycpO1xuXG52YXIgX21hcGJveEdsID0gcmVxdWlyZSgnbWFwYm94LWdsJyk7XG5cbnZhciBfbWFwYm94R2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbWFwYm94R2wpO1xuXG5yZXF1aXJlKCdqcXVlcnknKTtcblxucmVxdWlyZSgnYm9vdHN0cmFwJyk7XG5cbnZhciBfdXRpbGl0eUZ1bmN0aW9ucyA9IHJlcXVpcmUoJy4vbW9kdWxlL3V0aWxpdHlGdW5jdGlvbnMuanMnKTtcblxudmFyIF9nZXRUaWxlcyA9IHJlcXVpcmUoJy4vbW9kdWxlL2dldFRpbGVzLmpzJyk7XG5cbnZhciBfdXBkYXRlTWFwID0gcmVxdWlyZSgnLi9tb2R1bGUvdXBkYXRlTWFwLmpzJyk7XG5cbnZhciBfdXBkYXRlTWFwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VwZGF0ZU1hcCk7XG5cbnZhciBfbWFwdXRuaWtfc3R5bGUgPSByZXF1aXJlKCcuL2pzb24vbWFwdXRuaWtfc3R5bGUuanMnKTtcblxudmFyIF9tYXB1dG5pa19zdHlsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tYXB1dG5pa19zdHlsZSk7XG5cbnZhciBfYWRkTWFwQ29udHJvbHMgPSByZXF1aXJlKCcuL21vZHVsZS9hZGRNYXBDb250cm9scy5qcycpO1xuXG52YXIgX2FkZE1hcENvbnRyb2xzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FkZE1hcENvbnRyb2xzKTtcblxudmFyIF9zZXR1cE1hcENvbnRyb2xzID0gcmVxdWlyZSgnLi9tb2R1bGUvc2V0dXBNYXBDb250cm9scy5qcycpO1xuXG52YXIgX3NldHVwTWFwQ29udHJvbHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2V0dXBNYXBDb250cm9scyk7XG5cbnZhciBfc2V0dXBNYXBDb250cm9sRXZlbnRzID0gcmVxdWlyZSgnLi9tb2R1bGUvc2V0dXBNYXBDb250cm9sRXZlbnRzLmpzJyk7XG5cbnZhciBfc2V0dXBNYXBDb250cm9sRXZlbnRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldHVwTWFwQ29udHJvbEV2ZW50cyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHNldCB1cCBtYXBcbnZhciBtYXAgPSBuZXcgX21hcGJveEdsMi5kZWZhdWx0Lk1hcCh7XG4gICAgY29udGFpbmVyOiAnbWFwJyxcbiAgICBzdHlsZTogX21hcHV0bmlrX3N0eWxlMi5kZWZhdWx0LFxuICAgIG1pblpvb206IDMsXG4gICAgbWF4Wm9vbTogMTMuOTksXG4gICAgem9vbTogMyxcbiAgICBjZW50ZXI6IFstMTA0LCAzOV1cbn0pO1xuXG4oMCwgX2FkZE1hcENvbnRyb2xzMi5kZWZhdWx0KShtYXApO1xuKDAsIF9zZXR1cE1hcENvbnRyb2xzMi5kZWZhdWx0KShtYXApO1xuKDAsIF9zZXR1cE1hcENvbnRyb2xFdmVudHMyLmRlZmF1bHQpKG1hcCk7XG5cbm1hcC5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcblxuICAgICgwLCBfZ2V0VGlsZXMuc2V0VGlsZVNvdXJjZXMpKG1hcCk7XG4gICAgKDAsIF9nZXRUaWxlcy5zZXRUaWxlTGF5ZXJzKShtYXApO1xuXG4gICAgLy8gc3RhcnR1cCBoYWNrLCByZW1vdmUgd2hlbiBtYXBib3ggZ2wganMgaW1wbGVtZW50cyBkYXRhZW5kXG4gICAgdmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZmVhdHVyZXMgPSBtYXAucXVlcnlSZW5kZXJlZEZlYXR1cmVzKHtcbiAgICAgICAgICAgIGxheWVyczogWydzdGF0ZS1maWxsJ11cbiAgICAgICAgfSkgfHwgW107XG5cbiAgICAgICAgaWYgKGZlYXR1cmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICgwLCBfdXBkYXRlTWFwMi5kZWZhdWx0KShtYXApO1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICB9LCAyNTApO1xufSk7XG5cbm1hcC5vbignbW92ZWVuZCcsICgwLCBfdXRpbGl0eUZ1bmN0aW9ucy5kZWJvdW5jZSkoZnVuY3Rpb24gKCkge1xuICAgICgwLCBfdXBkYXRlTWFwMi5kZWZhdWx0KShtYXApO1xufSwgMjUwKSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _dataset = __webpack_require__(20);\n\nvar _dataset2 = _interopRequireDefault(_dataset);\n\nvar _geoscheme = __webpack_require__(3);\n\nvar _geoscheme2 = _interopRequireDefault(_geoscheme);\n\nvar _populateThemes = __webpack_require__(22);\n\nvar _populateThemes2 = _interopRequireDefault(_populateThemes);\n\nvar _populateGeography = __webpack_require__(21);\n\nvar _populateGeography2 = _interopRequireDefault(_populateGeography);\n\nvar _reduxSetup = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction populateDatasets() {\n\n    var current_store_values = _reduxSetup.Store.getState();\n\n    var default_dataset = current_store_values.dataset;\n\n    var acs_html = \'\';\n    var census_html = \'\';\n\n    var dataset_keys = Object.keys(_dataset2.default);\n\n    dataset_keys.forEach(function (key) {\n\n        var ifchecked = key === default_dataset ? \'checked\' : \'\';\n\n        if (_dataset2.default[key].type === "ACS") {\n            acs_html += \'<div class="input-group"><span class="input-group-addon"><input type="radio" name="datasetgroup"  value="\' + key + \'" \' + ifchecked + \'></span><input type="text" value="\' + _dataset2.default[key].title + \'" class="form-control"></div>\';\n        } else if (_dataset2.default[key].type === "Census") {\n            census_html += \'<div class="input-group"><span class="input-group-addon"><input type="radio" name="datasetgroup"  value="\' + key + \'" \' + ifchecked + \'></span><input type="text" value="\' + _dataset2.default[key].title + \'" class="form-control"></div>\';\n        } else {\n            console.error(\'Unknown Dataset Type\');\n        }\n    });\n\n    $("#acsgroup").append(acs_html);\n    $("#censusgroup").append(census_html);\n\n    $("input:radio[name=datasetgroup]").change(function () {\n\n        var new_dataset = $(\'input:radio[name=datasetgroup]:checked\').val();\n        console.log(new_dataset);\n\n        _reduxSetup.Store.dispatch({\n            type: \'CHANGE DATASET\',\n            value: new_dataset\n        });\n    });\n} /* global $ */\n\nexports.default = populateDatasets;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3BvcHVsYXRlRGF0YXNldHMuanM/ZGI4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9kYXRhc2V0ID0gcmVxdWlyZSgnLi8uLi9qc29uL2RhdGFzZXQuanMnKTtcblxudmFyIF9kYXRhc2V0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RhdGFzZXQpO1xuXG52YXIgX2dlb3NjaGVtZSA9IHJlcXVpcmUoJy4vLi4vanNvbi9nZW9zY2hlbWUuanMnKTtcblxudmFyIF9nZW9zY2hlbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2Vvc2NoZW1lKTtcblxudmFyIF9wb3B1bGF0ZVRoZW1lcyA9IHJlcXVpcmUoJy4vcG9wdWxhdGVUaGVtZXMuanMnKTtcblxudmFyIF9wb3B1bGF0ZVRoZW1lczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3B1bGF0ZVRoZW1lcyk7XG5cbnZhciBfcG9wdWxhdGVHZW9ncmFwaHkgPSByZXF1aXJlKCcuL3BvcHVsYXRlR2VvZ3JhcGh5LmpzJyk7XG5cbnZhciBfcG9wdWxhdGVHZW9ncmFwaHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcG9wdWxhdGVHZW9ncmFwaHkpO1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcG9wdWxhdGVEYXRhc2V0cygpIHtcblxuICAgIHZhciBjdXJyZW50X3N0b3JlX3ZhbHVlcyA9IF9yZWR1eFNldHVwLlN0b3JlLmdldFN0YXRlKCk7XG5cbiAgICB2YXIgZGVmYXVsdF9kYXRhc2V0ID0gY3VycmVudF9zdG9yZV92YWx1ZXMuZGF0YXNldDtcblxuICAgIHZhciBhY3NfaHRtbCA9ICcnO1xuICAgIHZhciBjZW5zdXNfaHRtbCA9ICcnO1xuXG4gICAgdmFyIGRhdGFzZXRfa2V5cyA9IE9iamVjdC5rZXlzKF9kYXRhc2V0Mi5kZWZhdWx0KTtcblxuICAgIGRhdGFzZXRfa2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblxuICAgICAgICB2YXIgaWZjaGVja2VkID0ga2V5ID09PSBkZWZhdWx0X2RhdGFzZXQgPyAnY2hlY2tlZCcgOiAnJztcblxuICAgICAgICBpZiAoX2RhdGFzZXQyLmRlZmF1bHRba2V5XS50eXBlID09PSBcIkFDU1wiKSB7XG4gICAgICAgICAgICBhY3NfaHRtbCArPSAnPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+PHNwYW4gY2xhc3M9XCJpbnB1dC1ncm91cC1hZGRvblwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZGF0YXNldGdyb3VwXCIgIHZhbHVlPVwiJyArIGtleSArICdcIiAnICsgaWZjaGVja2VkICsgJz48L3NwYW4+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCInICsgX2RhdGFzZXQyLmRlZmF1bHRba2V5XS50aXRsZSArICdcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiPjwvZGl2Pic7XG4gICAgICAgIH0gZWxzZSBpZiAoX2RhdGFzZXQyLmRlZmF1bHRba2V5XS50eXBlID09PSBcIkNlbnN1c1wiKSB7XG4gICAgICAgICAgICBjZW5zdXNfaHRtbCArPSAnPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+PHNwYW4gY2xhc3M9XCJpbnB1dC1ncm91cC1hZGRvblwiPjxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZGF0YXNldGdyb3VwXCIgIHZhbHVlPVwiJyArIGtleSArICdcIiAnICsgaWZjaGVja2VkICsgJz48L3NwYW4+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCInICsgX2RhdGFzZXQyLmRlZmF1bHRba2V5XS50aXRsZSArICdcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiPjwvZGl2Pic7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmtub3duIERhdGFzZXQgVHlwZScpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAkKFwiI2Fjc2dyb3VwXCIpLmFwcGVuZChhY3NfaHRtbCk7XG4gICAgJChcIiNjZW5zdXNncm91cFwiKS5hcHBlbmQoY2Vuc3VzX2h0bWwpO1xuXG4gICAgJChcImlucHV0OnJhZGlvW25hbWU9ZGF0YXNldGdyb3VwXVwiKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBuZXdfZGF0YXNldCA9ICQoJ2lucHV0OnJhZGlvW25hbWU9ZGF0YXNldGdyb3VwXTpjaGVja2VkJykudmFsKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKG5ld19kYXRhc2V0KTtcblxuICAgICAgICBfcmVkdXhTZXR1cC5TdG9yZS5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnQ0hBTkdFIERBVEFTRVQnLFxuICAgICAgICAgICAgdmFsdWU6IG5ld19kYXRhc2V0XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSAvKiBnbG9iYWwgJCAqL1xuXG5leHBvcnRzLmRlZmF1bHQgPSBwb3B1bGF0ZURhdGFzZXRzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZS9wb3B1bGF0ZURhdGFzZXRzLmpzXG4vLyBtb2R1bGUgaWQgPSA1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBIiwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = updateLegend;\n\nvar _computed_breaks = __webpack_require__(19);\n\nvar _computed_breaks2 = _interopRequireDefault(_computed_breaks);\n\nvar _colortree = __webpack_require__(18);\n\nvar _colortree2 = _interopRequireDefault(_colortree);\n\nvar _datatree = __webpack_require__(9);\n\nvar _datatree2 = _interopRequireDefault(_datatree);\n\nvar _geoscheme = __webpack_require__(3);\n\nvar _geoscheme2 = _interopRequireDefault(_geoscheme);\n\nvar _reduxSetup = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction updateLegend(current_dropdown_value, geography_name) {\n\n    var current_store_values = _reduxSetup.Store.getState();\n    var dataset = current_store_values.dataset;\n\n    var breaks_style = _datatree2.default[dataset][current_dropdown_value].favstyle[0] + _datatree2.default[dataset][current_dropdown_value].favstyle[1];\n    var legend_breaks = _computed_breaks2.default[dataset][current_dropdown_value][geography_name][breaks_style];\n\n    var color_style = _datatree2.default[dataset][current_dropdown_value].favstyle[2] + '_' + _datatree2.default[dataset][current_dropdown_value].favstyle[1];\n    var colorscheme = _colortree2.default[color_style];\n\n    var type = _datatree2.default[dataset][current_dropdown_value].type;\n    var default_color = '#fff';\n    var title = _datatree2.default[dataset][current_dropdown_value].title;\n\n    var html_string = \"<div class='legend-title-text'>\" + title + \"</div><table>\"; // inner HTML to be inserted into legend\n\n    for (var i = legend_breaks.length - 1; i > -1; i--) {\n        html_string += '<tr><td class=\"t-pad-sides\"><div class=\"legend-box\" style=\"background-color:' + colorscheme[i] + ';\"></div></td><td class=\"t-pad-sides\"></td><td class=\"t-align-right\">' + formatValue(legend_breaks[i], type) + '</td><td class=\"t-pad-sides\">' + (i === legend_breaks.length - 1 ? '+' : '') + '</td></tr>';\n    }\n\n    // default color\n    html_string += '<tr><td class=\"t-pad-sides\"><div class=\"legend-box\" style=\"background-color:' + default_color + ';\"></div></td><td class=\"t-pad-sides\">&lt;</td><td class=\"t-align-right\">' + formatValue(legend_breaks[0], type) + '</td><td class=\"t-pad-sides\"></td></tr></table>';\n\n    document.getElementById('legend-ctrl').innerHTML = html_string;\n}\n\nfunction formatValue(val, type) {\n\n    if (type === 'currency') {\n        return ' $' + val.toLocaleString(); // add currency and thousands comma\n    }\n    if (type === 'number') {\n        return val.toLocaleString(); // add thousands comma\n    }\n    if (type === 'regular') {\n        return val; // no formatting\n    }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlL3VwZGF0ZUxlZ2VuZC5qcz85NjExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXBkYXRlTGVnZW5kO1xuXG52YXIgX2NvbXB1dGVkX2JyZWFrcyA9IHJlcXVpcmUoJy4vLi4vanNvbi9jb21wdXRlZF9icmVha3MuanMnKTtcblxudmFyIF9jb21wdXRlZF9icmVha3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY29tcHV0ZWRfYnJlYWtzKTtcblxudmFyIF9jb2xvcnRyZWUgPSByZXF1aXJlKCcuLy4uL2pzb24vY29sb3J0cmVlLmpzJyk7XG5cbnZhciBfY29sb3J0cmVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbG9ydHJlZSk7XG5cbnZhciBfZGF0YXRyZWUgPSByZXF1aXJlKCcuLy4uL2pzb24vZGF0YXRyZWUuanMnKTtcblxudmFyIF9kYXRhdHJlZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kYXRhdHJlZSk7XG5cbnZhciBfZ2Vvc2NoZW1lID0gcmVxdWlyZSgnLi8uLi9qc29uL2dlb3NjaGVtZS5qcycpO1xuXG52YXIgX2dlb3NjaGVtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZW9zY2hlbWUpO1xuXG52YXIgX3JlZHV4U2V0dXAgPSByZXF1aXJlKCcuL3JlZHV4U2V0dXAuanMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdXBkYXRlTGVnZW5kKGN1cnJlbnRfZHJvcGRvd25fdmFsdWUsIGdlb2dyYXBoeV9uYW1lKSB7XG5cbiAgICB2YXIgY3VycmVudF9zdG9yZV92YWx1ZXMgPSBfcmVkdXhTZXR1cC5TdG9yZS5nZXRTdGF0ZSgpO1xuICAgIHZhciBkYXRhc2V0ID0gY3VycmVudF9zdG9yZV92YWx1ZXMuZGF0YXNldDtcblxuICAgIHZhciBicmVha3Nfc3R5bGUgPSBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1bY3VycmVudF9kcm9wZG93bl92YWx1ZV0uZmF2c3R5bGVbMF0gKyBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1bY3VycmVudF9kcm9wZG93bl92YWx1ZV0uZmF2c3R5bGVbMV07XG4gICAgdmFyIGxlZ2VuZF9icmVha3MgPSBfY29tcHV0ZWRfYnJlYWtzMi5kZWZhdWx0W2RhdGFzZXRdW2N1cnJlbnRfZHJvcGRvd25fdmFsdWVdW2dlb2dyYXBoeV9uYW1lXVticmVha3Nfc3R5bGVdO1xuXG4gICAgdmFyIGNvbG9yX3N0eWxlID0gX2RhdGF0cmVlMi5kZWZhdWx0W2RhdGFzZXRdW2N1cnJlbnRfZHJvcGRvd25fdmFsdWVdLmZhdnN0eWxlWzJdICsgJ18nICsgX2RhdGF0cmVlMi5kZWZhdWx0W2RhdGFzZXRdW2N1cnJlbnRfZHJvcGRvd25fdmFsdWVdLmZhdnN0eWxlWzFdO1xuICAgIHZhciBjb2xvcnNjaGVtZSA9IF9jb2xvcnRyZWUyLmRlZmF1bHRbY29sb3Jfc3R5bGVdO1xuXG4gICAgdmFyIHR5cGUgPSBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1bY3VycmVudF9kcm9wZG93bl92YWx1ZV0udHlwZTtcbiAgICB2YXIgZGVmYXVsdF9jb2xvciA9ICcjZmZmJztcbiAgICB2YXIgdGl0bGUgPSBfZGF0YXRyZWUyLmRlZmF1bHRbZGF0YXNldF1bY3VycmVudF9kcm9wZG93bl92YWx1ZV0udGl0bGU7XG5cbiAgICB2YXIgaHRtbF9zdHJpbmcgPSBcIjxkaXYgY2xhc3M9J2xlZ2VuZC10aXRsZS10ZXh0Jz5cIiArIHRpdGxlICsgXCI8L2Rpdj48dGFibGU+XCI7IC8vIGlubmVyIEhUTUwgdG8gYmUgaW5zZXJ0ZWQgaW50byBsZWdlbmRcblxuICAgIGZvciAodmFyIGkgPSBsZWdlbmRfYnJlYWtzLmxlbmd0aCAtIDE7IGkgPiAtMTsgaS0tKSB7XG4gICAgICAgIGh0bWxfc3RyaW5nICs9ICc8dHI+PHRkIGNsYXNzPVwidC1wYWQtc2lkZXNcIj48ZGl2IGNsYXNzPVwibGVnZW5kLWJveFwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjonICsgY29sb3JzY2hlbWVbaV0gKyAnO1wiPjwvZGl2PjwvdGQ+PHRkIGNsYXNzPVwidC1wYWQtc2lkZXNcIj48L3RkPjx0ZCBjbGFzcz1cInQtYWxpZ24tcmlnaHRcIj4nICsgZm9ybWF0VmFsdWUobGVnZW5kX2JyZWFrc1tpXSwgdHlwZSkgKyAnPC90ZD48dGQgY2xhc3M9XCJ0LXBhZC1zaWRlc1wiPicgKyAoaSA9PT0gbGVnZW5kX2JyZWFrcy5sZW5ndGggLSAxID8gJysnIDogJycpICsgJzwvdGQ+PC90cj4nO1xuICAgIH1cblxuICAgIC8vIGRlZmF1bHQgY29sb3JcbiAgICBodG1sX3N0cmluZyArPSAnPHRyPjx0ZCBjbGFzcz1cInQtcGFkLXNpZGVzXCI+PGRpdiBjbGFzcz1cImxlZ2VuZC1ib3hcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6JyArIGRlZmF1bHRfY29sb3IgKyAnO1wiPjwvZGl2PjwvdGQ+PHRkIGNsYXNzPVwidC1wYWQtc2lkZXNcIj4mbHQ7PC90ZD48dGQgY2xhc3M9XCJ0LWFsaWduLXJpZ2h0XCI+JyArIGZvcm1hdFZhbHVlKGxlZ2VuZF9icmVha3NbMF0sIHR5cGUpICsgJzwvdGQ+PHRkIGNsYXNzPVwidC1wYWQtc2lkZXNcIj48L3RkPjwvdHI+PC90YWJsZT4nO1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xlZ2VuZC1jdHJsJykuaW5uZXJIVE1MID0gaHRtbF9zdHJpbmc7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKHZhbCwgdHlwZSkge1xuXG4gICAgaWYgKHR5cGUgPT09ICdjdXJyZW5jeScpIHtcbiAgICAgICAgcmV0dXJuICcgJCcgKyB2YWwudG9Mb2NhbGVTdHJpbmcoKTsgLy8gYWRkIGN1cnJlbmN5IGFuZCB0aG91c2FuZHMgY29tbWFcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB2YWwudG9Mb2NhbGVTdHJpbmcoKTsgLy8gYWRkIHRob3VzYW5kcyBjb21tYVxuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gJ3JlZ3VsYXInKSB7XG4gICAgICAgIHJldHVybiB2YWw7IC8vIG5vIGZvcm1hdHRpbmdcbiAgICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlL3VwZGF0ZUxlZ2VuZC5qc1xuLy8gbW9kdWxlIGlkID0gNTVcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Control implemented as ES6 class\n\nvar EasyButton = function () {\n    function EasyButton(div_id, icon, title) {\n        _classCallCheck(this, EasyButton);\n\n        this.div_id = div_id;\n        this.icon = icon;\n        this.title = title;\n    }\n\n    _createClass(EasyButton, [{\n        key: 'onAdd',\n        value: function onAdd(map) {\n            this._map = map;\n            this._container = document.createElement('button');\n            this._container.className = \"mapboxgl-ctrl custom-control-style\";\n            this._container.id = this.div_id;\n            this._container.title = this.title;\n            this._span = document.createElement('span');\n            this._span.className = 'easy-btn fa fa-lg ' + this.icon;\n            this._container.appendChild(this._span);\n\n            return this._container;\n        }\n    }, {\n        key: 'onRemove',\n        value: function onRemove() {\n            this._container.parentNode.removeChild(this._container);\n            this._map = undefined;\n        }\n    }]);\n\n    return EasyButton;\n}();\n\nexports.default = EasyButton;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2lkZ2V0cy9FYXN5QnV0dG9uQ3RybC5qcz8yOWYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4vLyBDb250cm9sIGltcGxlbWVudGVkIGFzIEVTNiBjbGFzc1xuXG52YXIgRWFzeUJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFYXN5QnV0dG9uKGRpdl9pZCwgaWNvbiwgdGl0bGUpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVhc3lCdXR0b24pO1xuXG4gICAgICAgIHRoaXMuZGl2X2lkID0gZGl2X2lkO1xuICAgICAgICB0aGlzLmljb24gPSBpY29uO1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKEVhc3lCdXR0b24sIFt7XG4gICAgICAgIGtleTogJ29uQWRkJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQWRkKG1hcCkge1xuICAgICAgICAgICAgdGhpcy5fbWFwID0gbWFwO1xuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgICAgICB0aGlzLl9jb250YWluZXIuY2xhc3NOYW1lID0gXCJtYXBib3hnbC1jdHJsIGN1c3RvbS1jb250cm9sLXN0eWxlXCI7XG4gICAgICAgICAgICB0aGlzLl9jb250YWluZXIuaWQgPSB0aGlzLmRpdl9pZDtcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci50aXRsZSA9IHRoaXMudGl0bGU7XG4gICAgICAgICAgICB0aGlzLl9zcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgdGhpcy5fc3Bhbi5jbGFzc05hbWUgPSAnZWFzeS1idG4gZmEgZmEtbGcgJyArIHRoaXMuaWNvbjtcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLl9zcGFuKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbnRhaW5lcjtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb25SZW1vdmUnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb25SZW1vdmUoKSB7XG4gICAgICAgICAgICB0aGlzLl9jb250YWluZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLl9jb250YWluZXIpO1xuICAgICAgICAgICAgdGhpcy5fbWFwID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIEVhc3lCdXR0b247XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEVhc3lCdXR0b247XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvd2lkZ2V0cy9FYXN5QnV0dG9uQ3RybC5qc1xuLy8gbW9kdWxlIGlkID0gNTZcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Control implemented as ES6 class\nvar LegendCtrl = function () {\n    function LegendCtrl() {\n        _classCallCheck(this, LegendCtrl);\n    }\n\n    _createClass(LegendCtrl, [{\n        key: 'onAdd',\n        value: function onAdd(map) {\n            this._map = map;\n            this._container = document.createElement('div');\n            this._container.id = 'legend-ctrl';\n            this._container.className = 'mapboxgl-ctrl custom-control-style';\n            return this._container;\n        }\n    }, {\n        key: 'onRemove',\n        value: function onRemove() {\n            this._container.parentNode.removeChild(this._container);\n            this._map = undefined;\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {\n            this.onRemove(); // alias the onRemove function (which presumably is also used in internal functions by Mapbox GL JS)\n        }\n    }]);\n\n    return LegendCtrl;\n}();\n\nexports.default = LegendCtrl;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2lkZ2V0cy9MZWdlbmRDdHJsLmpzP2I4YzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8vIENvbnRyb2wgaW1wbGVtZW50ZWQgYXMgRVM2IGNsYXNzXG52YXIgTGVnZW5kQ3RybCA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMZWdlbmRDdHJsKCkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGVnZW5kQ3RybCk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKExlZ2VuZEN0cmwsIFt7XG4gICAgICAgIGtleTogJ29uQWRkJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uQWRkKG1hcCkge1xuICAgICAgICAgICAgdGhpcy5fbWFwID0gbWFwO1xuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICB0aGlzLl9jb250YWluZXIuaWQgPSAnbGVnZW5kLWN0cmwnO1xuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLmNsYXNzTmFtZSA9ICdtYXBib3hnbC1jdHJsIGN1c3RvbS1jb250cm9sLXN0eWxlJztcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb250YWluZXI7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ29uUmVtb3ZlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uUmVtb3ZlKCkge1xuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fY29udGFpbmVyKTtcbiAgICAgICAgICAgIHRoaXMuX21hcCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVtb3ZlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICAgIHRoaXMub25SZW1vdmUoKTsgLy8gYWxpYXMgdGhlIG9uUmVtb3ZlIGZ1bmN0aW9uICh3aGljaCBwcmVzdW1hYmx5IGlzIGFsc28gdXNlZCBpbiBpbnRlcm5hbCBmdW5jdGlvbnMgYnkgTWFwYm94IEdMIEpTKVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIExlZ2VuZEN0cmw7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IExlZ2VuZEN0cmw7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvd2lkZ2V0cy9MZWdlbmRDdHJsLmpzXG4vLyBtb2R1bGUgaWQgPSA1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==")},,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return require(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}],[53]);